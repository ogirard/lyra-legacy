<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Infragistics4.Math.v12.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Math.BooleanMatrix">
            <summary>
            A BooleanMatrix is a list of boolean values with an additional dimensionality property that 
            specifies its spatial orientation.
            </summary>
        </member>
        <member name="T:Infragistics.Math.MatrixBase">
            <summary>
            A matrix is a set of numbers with an additional dimensionality property that specifys its spatial orientation.
            MatrixBase handles the logic for manipulating the spatial orientation of a matrix. 
            </summary>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.#ctor">
            <summary>
            Initializes an empty <see cref="T:Infragistics.Math.MatrixBase"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.#ctor(System.Int32)">
            <summary>
            Initializes a row <see cref="T:Infragistics.Math.MatrixBase"/> of the specified <paramref name="length"/>.
            </summary>
            <param name="length">The length of the constructed MatrixBase.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when length is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.#ctor(System.Int32,Infragistics.Math.VectorType)">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.MatrixBase"/> with the specified length and the orientation specified by 
            <paramref name="type"/>.
            </summary>
            <param name="length">The length of the constructed MatrixBase.</param>
            <param name="type">The orientation of the constructed MatrixBase.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when length is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.#ctor(System.Int32[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.MatrixBase"/> with the specified <paramref name="dimensions"/>.
            </summary>
            <param name="dimensions">The dimensions of the Constructed MatrixBase.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when more than two dimensions are specified.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when neither dimension is singular.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when either dimension is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.MatrixBase"/>.
            </summary>
            <returns>The string representation of a <see cref="T:Infragistics.Math.MatrixBase"/>.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.MatrixBase"/> with <paramref name="x"/> for equality.
            </summary>
            <param name="x">An object.</param>
            <returns>Returns True if the MatrixBase is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.GetHashCode">
            <summary>
            Returns a hash code for the <see cref="T:Infragistics.Math.MatrixBase"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Infragistics.Math.MatrixBase"/> instance."
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.ComplexVector"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.IsColumn">
            <summary>
            Determines whether the <see cref="T:Infragistics.Math.MatrixBase"/> is a column MatrixBase.
            </summary>
            <returns>Returns True if the second dimension of MatrixBase is equal to 1; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.IsEmpty">
            <summary>
            Determines whether the <see cref="T:Infragistics.Math.MatrixBase"/> is empty.
            </summary>
            <returns>Returns True if the MatrixBase is empty; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.IsRow">
            <summary>
            Determines whether the <see cref="T:Infragistics.Math.MatrixBase"/> is a row MatrixBase.
            </summary>
            <returns>Returns True if the first dimension of MatrixBase is equal to 1; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.IsSquare">
            <summary>
            Determines whether the <see cref="T:Infragistics.Math.MatrixBase"/> is square.
            </summary>
            <returns>Returns True if the MatrixBase has exactly two equal dimensions; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.IsTwoDimensional">
            <summary>
            Determines if the <see cref="T:Infragistics.Math.MatrixBase"/> has exactly two dimensions.
            </summary>
            <returns>True if the MatrixBase has exactly two dimensions; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.IsUnitary">
            <summary>
            Determines whether the <see cref="T:Infragistics.Math.MatrixBase"/> is unitary.
            </summary>
            <returns>Returns True if the MatrixBase has only one element; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.MatrixBase.Squeeze">
            <summary>
            Removes unitary dimensions from <see cref="T:Infragistics.Math.MatrixBase"/> instances with greater than two dimensions.
            </summary>
            <returns>The modified MatrixBase.</returns>
        </member>
        <member name="P:Infragistics.Math.MatrixBase.Dimensions">
            <summary>
            Returns the dimensions of the <see cref="T:Infragistics.Math.MatrixBase"/>.
            </summary>
            <seealso cref="P:Infragistics.Math.MatrixBase.Size"/>
        </member>
        <member name="P:Infragistics.Math.MatrixBase.Length">
            <summary>
            Returns the length of the <see cref="T:Infragistics.Math.MatrixBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Math.MatrixBase.Rank">
            <summary>
            Returns the number of dimensions in the <see cref="T:Infragistics.Math.MatrixBase"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Math.MatrixBase.Size">
            <summary>
            Returns the dimensions of the <see cref="T:Infragistics.Math.MatrixBase"/> as a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Math.BooleanMatrix.Empty">
            <summary>
            Returns the empty <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.#ctor">
            <summary>
            Initializes an empty <see cref="T:Infragistics.Math.BooleanMatrix"/> instance.
            </summary>
            <seealso cref="M:Infragistics.Math.MatrixBase.IsEmpty"/>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.#ctor(System.Int32)">
            <summary>
            Initializes a one-dimensional <see cref="T:Infragistics.Math.BooleanMatrix"/> of a specified <paramref name="length"/>. 
            </summary>
            <param name="length">The length of the constructed BooleanMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.#ctor(System.Int32[])">
            <summary>
            Initializes a zero <see cref="T:Infragistics.Math.BooleanMatrix"/> with the specified <paramref name="dimensions"/>. 
            </summary>
            <param name="dimensions">The dimensions of the constructed BooleanMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.#ctor(System.Boolean,System.Int32[])">
            <summary>
            Initializes a constant <see cref="T:Infragistics.Math.BooleanMatrix"/> with the specified <paramref name="dimensions"/>. 
            </summary>
            <param name="value">The constant value assigned to each element of the BooleanMatrix.</param>
            <param name="dimensions">The dimensions of the constructed BooleanMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a one-dimensional <see cref="T:Infragistics.Math.BooleanMatrix"/> of the specified <paramref name="length"/> and the specified <paramref name="value"/>.
            </summary>
            <param name="value">The value assigned to each element of the constructed BooleanMatrix.</param>
            <param name="length">The length of the constructed BooleanMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.#ctor(System.Collections.Generic.IList{System.Boolean},System.Int32[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.BooleanMatrix"/> with the specified <paramref name="elements"/> and <paramref name="dimensions"/>.
            </summary>
            <param name="elements">The elements of the constructed BooleanMatrix.</param>
            <param name="dimensions">The dimensions of the constructed BooleanMatrix.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the dimensions specify a size that is inconsistent with the length of the elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.#ctor(System.Array)">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.BooleanMatrix"/> by copying the elements and dimensions of a multi-dimensional 
            Boolean array.
            </summary>
            <param name="x">A multi-dimensional Boolean array.</param>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not a Boolean array.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.BooleanMatrix"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.CopyTo(System.Boolean[],System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.BooleanMatrix"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.BooleanMatrix"/> with <paramref name="x"/> for equality.
            </summary>
            <param name="x">An object.</param>
            <returns>Returns True if the BooleanMatrix is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.GetHashCode">
            <summary>
            Returns hash code for the <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.System#Collections#Generic#IEnumerable{System#Boolean}#GetEnumerator">
            <summary>
            Returns an double enumerator for the <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.System#ICloneable#Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_LogicalNot(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise NOT of a <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = NOT(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.LogicalNot">
            <summary>
            Returns the pointwise NOT of the <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
            <returns>A BooleanMatrix y, where y[i] = NOT(this[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_BitwiseAnd(Infragistics.Math.BooleanMatrix,Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical AND of two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances.
            </summary>
            <param name="x1">The first BooleanMatrix.</param>
            <param name="x2">The second BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = AND(x1[i],x2[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the <paramref name="x1"/> and <paramref name="x2"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_BitwiseAnd(Infragistics.Math.BooleanMatrix,System.Boolean)">
            <summary>
            Returns the pointwise logical AND of a <see cref="T:Infragistics.Math.BooleanMatrix"/> and a bool.
            </summary>
            <param name="x1">A BooleanMatrix.</param>
            <param name="x2">A bool.</param>
            <returns>A BooleanMatrix y, where y[i] = AND(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_BitwiseAnd(System.Boolean,Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical AND of a bool and a <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
            <param name="x1">A bool.</param>
            <param name="x2">A BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = AND(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.BitwiseAnd(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical AND of two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = AND(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanMatrix and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.And(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical AND of two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = AND(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanMatrix and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_BitwiseOr(Infragistics.Math.BooleanMatrix,Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical OR of two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances.
            </summary>
            <param name="x1">The first BooleanMatrix.</param>
            <param name="x2">The second BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = OR(x1[i],x2[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the x1 and x2 have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_BitwiseOr(Infragistics.Math.BooleanMatrix,System.Boolean)">
            <summary>
            Returns the pointwise logical OR of a <see cref="T:Infragistics.Math.BooleanMatrix"/> and a bool.
            </summary>
            <param name="x1">A BooleanMatrix.</param>
            <param name="x2">A bool.</param>
            <returns>A BooleanMatrix y, where y[i] = OR(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_BitwiseOr(System.Boolean,Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical OR of a bool and a <see cref="T:Infragistics.Math.BooleanMatrix"/>.
            </summary>
            <param name="x1">A bool.</param>
            <param name="x2">A BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = OR(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.BitwiseOr(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical OR of two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = OR(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanMatrix and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.Or(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the pointwise logical OR of two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanMatrix y, where y[i] = OR(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanMatrix and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_Equality(Infragistics.Math.BooleanMatrix,Infragistics.Math.BooleanMatrix)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances have the same dimensions and element values.
            </summary>
            <param name="x1">The first BooleanMatrix.</param>
            <param name="x2">The second BooleanMatrix.</param>
            <returns>Returns True if the two BooleanMatrix instances are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_Inequality(Infragistics.Math.BooleanMatrix,Infragistics.Math.BooleanMatrix)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.BooleanMatrix"/> instances have different dimensions or element values.
            </summary>
            <param name="x1">The first BooleanMatrix.</param>
            <param name="x2">The second BooleanMatrix.</param>
            <returns>Returns True if the two BooleanMatrix instances are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_Explicit(Infragistics.Math.BooleanVector)~Infragistics.Math.BooleanMatrix">
            <summary>
            Casts a <see cref="T:Infragistics.Math.BooleanVector"/> to a <see cref="T:Infragistics.Math.BooleanMatrix"/>. 
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A Boolean y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_Explicit(Infragistics.Math.BooleanMatrix)~Infragistics.Math.BooleanVector">
            <summary>
            Casts a <see cref="T:Infragistics.Math.BooleanMatrix"/> to a <see cref="T:Infragistics.Math.BooleanVector"/>. 
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanVector y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.op_Implicit(System.Boolean)~Infragistics.Math.BooleanMatrix">
            <summary>
            Casts a boolean value to a unitary <see cref="T:Infragistics.Math.BooleanMatrix"/>. 
            </summary>
            <param name="x">A boolean value.</param>
            <returns>A unitary BooleanMatrix y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanMatrix.Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.BooleanMatrix"/> instance.
            </summary>
        </member>
        <member name="P:Infragistics.Math.BooleanMatrix.Item(System.Int32[])">
            <summary>
            An indexer for the <see cref="T:Infragistics.Math.BooleanMatrix"/>. The Matrix can be indexed one-dimensionally or multi-dimensionally.
            </summary>
            <param name="subscript">A sequence of indices that correspond to the dimensions of the BooleanMatrix.</param>
            <returns>The element specified by the subscript.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the BooleanMatrix is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="subscript"/> is non-unitary and has a different number of dimensions than 
            the BooleanMatrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index is out of the bounds of the BooleanMatrix.
            </exception>
        </member>
        <member name="P:Infragistics.Math.BooleanMatrix.Item(Infragistics.Math.Vector[])">
            <summary>
            An indexer for the <see cref="T:Infragistics.Math.BooleanMatrix"/> that takes a series of <see cref="T:Infragistics.Math.Vector"/> subscripts. 
            The BooleanMatrix can be indexed one-dimensionally or multi-dimensionally.
            </summary>
            <param name="subscript">An array of index Vectors.</param>
            <returns>A BooleanMatrix containing the elements specified by the <paramref name="subscript"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the BooleanMatrix is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="subscript"/> is non-unitary and has a different number of dimensions than 
            the BooleanMatrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index is out of the bounds of the BooleanMatrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index has a non-integer value.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the set value does not align with the elements specified by the subscript.
            </exception>
        </member>
        <member name="T:Infragistics.Math.BooleanVector">
            <summary>
            A BooleanVector is a list of boolean values with an additional dimensionality property that specifies 
            its orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Math.BooleanVector.Empty">
            <summary>
            Returns the empty <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.#ctor">
            <summary>
            Initializes an empty <see cref="T:Infragistics.Math.BooleanVector"/> instance.
            </summary>
            <seealso cref="M:Infragistics.Math.MatrixBase.IsEmpty"/>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.#ctor(System.Int32)">
            <summary>
            Initializes a row zero <see cref="T:Infragistics.Math.BooleanVector"/> of a specified <paramref name="length"/>. 
            </summary>
            <param name="length">The length of the constructed BooleanVector.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a row <see cref="T:Infragistics.Math.BooleanVector"/> of the specified <paramref name="length"/> and the 
            specified <paramref name="value"/>.
            </summary>
            <param name="value">The value assigned to each element of the constructed BooleanVector.</param>
            <param name="length">The length of the constructed BooleanVector.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.#ctor(System.Collections.Generic.IList{System.Boolean})">
            <summary>
            Initializes a row <see cref="T:Infragistics.Math.BooleanVector"/> with the specified <paramref name="elements"/>.
            </summary>
            <param name="elements">The elements of the constructed BooleanVector.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.#ctor(System.Collections.Generic.IList{System.Boolean},System.Int32[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.BooleanVector"/> with the specified <paramref name="elements"/> and 
            <paramref name="dimensions"/>.
            </summary>
            <param name="elements">The elements of the constructed BooleanVector.</param>
            <param name="dimensions">The dimensions of the constructed BooleanVector.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the dimensions specify a size that is inconsistent with the length of the elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.#ctor(Infragistics.Math.VectorType,System.Boolean[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.BooleanVector"/> with the specified elements <paramref name="x"/>.
            </summary>
            <param name="type">An enum that specifies the orientation of the BooleanVector.</param>
            <param name="x">A bool array of elements.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.BooleanVector"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.CopyTo(System.Boolean[],System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.BooleanVector"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.BooleanVector"/> with <paramref name="x"/> for equality.
            </summary>
            <param name="x">An object.</param>
            <returns>Returns True if the BooleanVector is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.GetHashCode">
            <summary>
            Returns hash code for the <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.System#Collections#Generic#IEnumerable{System#Boolean}#GetEnumerator">
            <summary>
            Returns an double enumerator for the <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.System#ICloneable#Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_LogicalNot(Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise NOT of a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = NOT(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.LogicalNot">
            <summary>
            Returns the pointwise NOT of the <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <returns>A BooleanVector y, where y[i] = NOT(this[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_BitwiseAnd(Infragistics.Math.BooleanVector,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical AND of two <see cref="T:Infragistics.Math.BooleanVector"/> instances.
            </summary>
            <param name="x1">The first BooleanVector.</param>
            <param name="x2">The second BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = AND(x1[i],x2[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the <paramref name="x1"/> and <paramref name="x2"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_BitwiseAnd(Infragistics.Math.BooleanVector,System.Boolean)">
            <summary>
            Returns the pointwise logical AND of a <see cref="T:Infragistics.Math.BooleanVector"/> and a bool.
            </summary>
            <param name="x1">A BooleanVector.</param>
            <param name="x2">A bool.</param>
            <returns>A BooleanVector y, where y[i] = AND(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_BitwiseAnd(System.Boolean,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical AND of a bool and a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="x1">A bool.</param>
            <param name="x2">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = AND(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.BitwiseAnd(Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical AND of two <see cref="T:Infragistics.Math.BooleanVector"/> instances.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = AND(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanVector and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.And(Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical AND of two <see cref="T:Infragistics.Math.BooleanVector"/> instances.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = AND(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanVector and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_BitwiseOr(Infragistics.Math.BooleanVector,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical OR of two <see cref="T:Infragistics.Math.BooleanVector"/> instances.
            </summary>
            <param name="x1">The first BooleanVector.</param>
            <param name="x2">The second BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = OR(x1[i],x2[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the x1 and x2 have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_BitwiseOr(Infragistics.Math.BooleanVector,System.Boolean)">
            <summary>
            Returns the pointwise logical OR of a <see cref="T:Infragistics.Math.BooleanVector"/> and a bool.
            </summary>
            <param name="x1">A BooleanVector.</param>
            <param name="x2">A bool.</param>
            <returns>A BooleanVector y, where y[i] = OR(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_BitwiseOr(System.Boolean,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical OR of a bool and a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="x1">A bool.</param>
            <param name="x2">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = OR(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.BitwiseOr(Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical OR of two <see cref="T:Infragistics.Math.BooleanVector"/> instances.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = OR(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanVector and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.Or(Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise logical OR of two <see cref="T:Infragistics.Math.BooleanVector"/> instances.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = OR(this[i],x[i]).</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the BooleanVector and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Equality(Infragistics.Math.BooleanVector,Infragistics.Math.BooleanVector)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.BooleanVector"/> instances have the same dimensions and element values.
            </summary>
            <returns>Returns True if the two BooleanVector instances are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Equality(Infragistics.Math.BooleanVector,System.Boolean)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.BooleanVector"/> and a bool.
            </summary>
            <param name="x1">A BooleanVector.</param>
            <param name="x2">A bool.</param>
            <returns>A new BooleanVector y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Equality(System.Boolean,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise equality operator for a bool and a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="x1">A bool.</param>
            <param name="x2">A BooleanVector.</param>
            <returns>A new BooleanVector y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.Equals(System.Boolean)">
            <summary>
            Returns the pointwise equality operator for the <see cref="T:Infragistics.Math.BooleanVector"/> and a bool.
            </summary>
            <param name="x">A bool.</param>
            <returns>A new BooleanVector y, where y[i] = Equals(this[i],x).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Inequality(Infragistics.Math.BooleanVector,Infragistics.Math.BooleanVector)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.BooleanVector"/> instances have different dimensions and element values.
            </summary>
            <returns>Returns True if the two Vector instances are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Inequality(System.Boolean,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.BooleanVector"/> and a bool.
            </summary>
            <param name="x1">A BooleanVector.</param>
            <param name="x2">A bool.</param>
            <returns>A new BooleanVector y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Inequality(Infragistics.Math.BooleanVector,System.Boolean)">
            <summary>
            Returns the pointwise inequality operator for a bool and a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="x1">A bool.</param>
            <param name="x2">A BooleanVector.</param>
            <returns>A new BooleanVector y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Implicit(System.Boolean)~Infragistics.Math.BooleanVector">
            <summary>
            Casts a bool to a unitary <see cref="T:Infragistics.Math.BooleanVector"/>. 
            </summary>
            <param name="x">A bool.</param>
            <returns>A unitary BooleanVector y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Explicit(Infragistics.Math.BooleanVector)~System.Boolean[]">
            <summary>
            Casts a <see cref="T:Infragistics.Math.BooleanVector"/> to a bool array. 
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A bool array y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.op_Implicit(System.Boolean[])~Infragistics.Math.BooleanVector">
            <summary>
            Casts a bool array to a row <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="x">A bool array.</param>
            <returns>A row BooleanVector y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.BooleanVector"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.Reverse">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.BooleanVector"/> by reversing the order of its elements.
            </summary>
            <returns>The modified BooleanVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.BooleanVector)"/>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.Sort">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.BooleanVector"/> by sorting the elements by value in ascending order.
            </summary>
            <returns>The modified BooleanVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.BooleanVector)"/>
        </member>
        <member name="M:Infragistics.Math.BooleanVector.Transpose">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.BooleanVector"/> by switching its orientation. A row BooleanVector is converted to a 
            column BooleanVector and vice versa.
            </summary>
            <returns>The modified BooleanVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.BooleanVector)"/>
        </member>
        <member name="P:Infragistics.Math.BooleanVector.Item(System.Int32[])">
            <summary>
            An indexer that gets and sets a single element of a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="indices">An index that specifies an element of the BooleanVector.</param>
            <returns>The specified element of the BooleanVector.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the BooleanVector is indexed with more than two indices.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the BooleanVector is indexed below 0 or above its length.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if a row BooleanVector is indexed with two indices and the first index is greater than 0.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if a column BooleanVector is indexed with two indices and the second index is greater than 0.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the empty BooleanVector is indexed.
            </exception>
        </member>
        <member name="P:Infragistics.Math.BooleanVector.Item(Infragistics.Math.Vector)">
            <summary>
            An indexer that gets or sets a set of elements in a <see cref="T:Infragistics.Math.BooleanVector"/>.
            </summary>
            <param name="indices">A Vector of integer indices.</param>
            <returns>A BooleanVector of elements specified by the <paramref name="indices"/></returns>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the BooleanVector is indexed below 0 or above its length.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the empty BooleanVector is indexed.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if the indices are not integers.
            </exception>
        </member>
        <member name="T:Infragistics.Math.Complex">
            <summary>
            A Complex number is a type of mathematical object with real and imaginary parts. 
            All of the standard mathematical operations and functions are defined for Complex
            numbers.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Complex.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Math.Complex"/> number with real and imaginary components.
            </summary>
            <param name="re">A double representing the real part of the constructed number.</param>
            <param name="im">A double representing the imaginary part of the constructed number.</param>
        </member>
        <member name="M:Infragistics.Math.Complex.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.Complex"/> number to <paramref name="x"/> for equality. 
            </summary>
            <param name="x">An object.</param>
            <returns>True if the Complex number is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.GetHashCode">
            <summary>
            Returns a hash code for the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <returns>The string representation of a Complex number.</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.ToString(System.IFormatProvider)">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.Complex"/> number in a specified format.
            </summary>
            <param name="formatProvider">A format for a particular culture.</param>
            <returns>The string representation of a Complex number.</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number to another object.
            </summary>
            <returns>
            -1 if obj is not <see cref="T:Infragistics.Math.Complex"/>.
            -1 if this is less than obj.
             0 if this is equal to obj.
             1 if this is greater than obj.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Complex.System#IComparable{Infragistics#Math#Complex}#CompareTo(Infragistics.Math.Complex)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Complex"/> numbers to each other.
            </summary>
            <param name="z">A Complex number.</param>
            <returns>
            Returns -1 if this is less than z.
            Returns 0 if this is equal to z.
            Returns 1 if this is greater than z.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Addition(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns the sum of two <see cref="T:Infragistics.Math.Complex"/> numbers.
            </summary>
            <param name="z1">A Complex number of the form: a+bi.</param>
            <param name="z2">A Complex number of the form: c+di</param>
            <returns>A Complex number of the form: (a+c) + (b+d)i</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.Add(Infragistics.Math.Complex)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="z"/> to the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="z">A Complex number.</param>
            <seealso cref="M:Infragistics.Math.Complex.op_Addition(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Subtraction(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns the difference of two <see cref="T:Infragistics.Math.Complex"/> numbers.
            </summary>
            <param name="z1">A Complex number of the form: a+bi</param>
            <param name="z2">A Complex number of the form: c+di</param>
            <returns>A Complex number of the form: (a-c) + (b-d)i</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.Subtract(Infragistics.Math.Complex)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="z"/> from the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="z">A Complex number.</param>
            <seealso cref="M:Infragistics.Math.Complex.op_Subtraction(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Multiply(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns the product of two <see cref="T:Infragistics.Math.Complex"/> numbers.
            </summary>
            <param name="z1">A Complex number of the form: a + bi</param>
            <param name="z2">A Complex number of the form: c + di</param>
            <returns>A Complex number of the form: (ac-bd) + (bc + ad)i</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Multiply(System.Double,Infragistics.Math.Complex)">
            <summary>
            Returns the product of a <see cref="T:Infragistics.Math.Complex"/> number and a double.
            </summary>
            <param name="x">A double of the form: c</param>
            <param name="z">A Complex number of the form: a + bi</param>
            <returns>A Complex number of the form: ac + ibc</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Multiply(Infragistics.Math.Complex,System.Double)">
            <summary>
            Returns the product of a <see cref="T:Infragistics.Math.Complex"/> number and a double.
            </summary>
            <param name="z">A Complex number of the form: a + bi</param>
            <param name="x">A double of the form: c</param>
            <returns>A Complex number of the form: ac + bci</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.Multiply(Infragistics.Math.Complex)">
            <summary>
            Multiplys a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="z"/> to the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="z">A Complex number.</param>
            <seealso cref="M:Infragistics.Math.Complex.op_Multiply(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Division(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns the division of two <see cref="T:Infragistics.Math.Complex"/> numbers.
            </summary>
            <param name="z1">A Complex number of the form: a + bi</param>
            <param name="z2">A Complex number of the form: c + di</param>
            <returns>A Complex number of the form: ((ac + bd)/(c^2 + d^2)) + ((bc - ad)/(c^2 + d^2))*i</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.Divide(Infragistics.Math.Complex)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="z"/> from the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="z">A Complex number.</param>
            <seealso cref="M:Infragistics.Math.Complex.op_Division(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Complex.op_LessThan(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns True if <paramref name="z1"/> is less than <paramref name="z2"/>; False otherwise.
            </summary>
            <param name="z1">The first <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="z2">The second Complex number.</param>
            <returns>
            False if z1 and z2 are equal; 
            True if z1 and z2 are unequal and z1 = Min(z1,z2);
            False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_LessThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns True if <paramref name="z1"/> is less than or equal to <paramref name="z2"/>; False otherwise.
            </summary>
            <param name="z1">The first <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="z2">The second Complex number.</param>
            <returns>
            True if z1 = Min(z1,z2);
            False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_GreaterThan(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns True if <paramref name="z1"/> is greater than <paramref name="z2"/>; False otherwise.
            </summary>
            <param name="z1">The first <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="z2">The second Complex number.</param>
            <returns>
            False if z1 and z2 are equal; 
            True if z1 and z2 are unequal and z1 = Max(z1,z2);
            False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_GreaterThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns True if <paramref name="z1"/> is greater than or equal to <paramref name="z2"/>; False otherwise.
            </summary>
            <param name="z1">The first <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="z2">The second Complex number.</param>
            <returns>
            True if z1 = Max(z1,z2);
            False otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Equality(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Complex"/> numbers for equality.
            </summary>
            <param name="z1">The first Complex number</param>
            <param name="z2">The second Complex number</param>
            <returns>True <paramref name="z1"/> is equal to <paramref name="z2"/>; they are equal</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Inequality(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Complex"/> numbers for inequality.
            </summary>
            <param name="z1">The first Complex number</param>
            <param name="z2">The second Complex number</param>
            <returns>True if <paramref name="z1"/> is not equal to <paramref name="z1"/>; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.op_Implicit(System.Double)~Infragistics.Math.Complex">
            <summary>
            Casts a double to a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x">A double.</param>
            <returns>The equivalent Complex number: x + 0i.</returns>
        </member>
        <member name="M:Infragistics.Math.Complex.Compare(Infragistics.Math.Complex)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.Complex"/> number to another Complex number <paramref name="z"/>.
            </summary>
            <param name="z">A Complex number.</param>
            <returns>
            Returns -1 if this is less than z.
            Returns 0 if this is equal to z.
            Returns 1 if this is greater than z.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Complex.Parse(System.String)">
            <summary>
            Takes a string representation of a <see cref="T:Infragistics.Math.Complex"/> number and returns the specified Complex number.
            </summary>
            <param name="s">A string representation of a Complex number.</param>
            <returns>The Complex number represented by <paramref name="s"/>.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when s is formatted incorrectly.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Complex.TryParse(System.String,Infragistics.Math.Complex@)">
            <summary>
            Returns True if <paramref name="s"/> can be parsed into a <see cref="T:Infragistics.Math.Complex"/> number; False otherwise. 
            </summary>
            <param name="s">A string representation of a Complex number.</param>
            <param name="z">The Complex number represented by s; null otherwise.</param>
            <returns>True if the parse was successful; False otherwise.</returns>
        </member>
        <member name="P:Infragistics.Math.Complex.Re">
            <summary>
            Returns the real part of the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
        </member>
        <member name="P:Infragistics.Math.Complex.Im">
            <summary>
            Returns the imaginary part of the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
        </member>
        <member name="P:Infragistics.Math.Complex.Mag">
            <summary>
            Returns the magnitude of the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)"/>
        </member>
        <member name="P:Infragistics.Math.Complex.Phase">
            <summary>
            Returns the phase of the <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)"/>
        </member>
        <member name="T:Infragistics.Math.ComplexMatrix">
            <summary>
            A ComplexMatrix is a list of <see cref="T:Infragistics.Math.Complex"/> numbers with an additional dimensionality property that 
            specifies its spatial orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComplexMatrix.Empty">
            <summary>
            Returns the empty <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.#ctor">
            <summary>
            Initializes an empty <see cref="T:Infragistics.Math.ComplexMatrix"/> instance.
            </summary>
            <seealso cref="M:Infragistics.Math.MatrixBase.IsEmpty"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.#ctor(System.Int32)">
            <summary>
            Initializes a one-dimensional <see cref="T:Infragistics.Math.ComplexMatrix"/> of a specified <paramref name="length"/>. 
            </summary>
            <param name="length">The length of the constructed ComplexMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.#ctor(System.Int32[])">
            <summary>
            Initializes a zero <see cref="T:Infragistics.Math.ComplexMatrix"/> with the specified <paramref name="dimensions"/>. 
            </summary>
            <param name="dimensions">The dimensions of the constructed ComplexMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.#ctor(Infragistics.Math.Complex,System.Int32[])">
            <summary>
            Initializes a constant <see cref="T:Infragistics.Math.ComplexMatrix"/> with the specified <paramref name="dimensions"/>. 
            </summary>
            <param name="value">The constant value assigned to each element of the ComplexMatrix.</param>
            <param name="dimensions">The dimensions of the constructed ComplexMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.#ctor(Infragistics.Math.Complex,System.Int32)">
            <summary>
            Initializes a one-dimensional <see cref="T:Infragistics.Math.ComplexMatrix"/> of the specified <paramref name="length"/> and the specified <paramref name="value"/>.
            </summary>
            <param name="value">The value assigned to each element of the constructed ComplexMatrix.</param>
            <param name="length">The length of the constructed ComplexMatrix.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.#ctor(System.Collections.Generic.IList{Infragistics.Math.Complex},System.Int32[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the specified <paramref name="elements"/> and <paramref name="dimensions"/>.
            </summary>
            <param name="elements">The elements of the constructed ComplexMatrix.</param>
            <param name="dimensions">The dimensions of the constructed ComplexMatrix.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the dimensions specify a size that is inconsistent with the length of the elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.#ctor(System.Array)">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.ComplexMatrix"/> by copying the elements and dimensions of a multi-dimensional 
            <see cref="T:Infragistics.Math.Complex"/> array.
            </summary>
            <param name="x">A multi-dimensional Complex array.</param>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not a Complex array.
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.ComplexMatrix"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CopyTo(Infragistics.Math.Complex[],System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.ComplexMatrix"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.ComplexMatrix"/> with <paramref name="x"/> for equality.
            </summary>
            <param name="x">An object.</param>
            <returns>Returns True if the ComplexMatrix is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.GetHashCode">
            <summary>
            Returns hash code for the <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.System#Collections#Generic#IEnumerable{Infragistics#Math#Complex}#GetEnumerator">
            <summary>
            Returns an double enumerator for the <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.System#ICloneable#Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Addition(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Adds two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Addition(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Addition(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Addition(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Addition(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Adds a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Addition(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Addition(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Subtraction(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Subtracts two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Subtraction(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Subtraction(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Subtraction(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Subtraction(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Subtracts a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Subtraction(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Subtraction(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Multiply(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Multiplies two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Multiply(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Multiply(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Multiply(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Multiply(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Multiplies a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Multiply(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Multiply(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Division(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Divides two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Division(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Division(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Division(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Division(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Multiplies a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Division(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Division(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/> pointwise.
            </summary>
            <returns>A ComplexMatrix y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Equality(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances have the same dimensions and element values.
            </summary>
            <param name="x1">The first ComplexMatrix.</param>
            <param name="x2">The second ComplexMatrix.</param>
            <returns>Returns True if the two ComplexMatrix instances are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Equality(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> have the same dimensions 
            and element values.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Matrix.</param>
            <returns>Returns True if the ComplexMatrix and the Matrix are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Equality(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> have the same dimensions 
            and element values.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>Returns True if the Matrix and the ComplexMatrix are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Equality(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A double.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Equality(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise equality operator for a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Equality(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Equality(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Inequality(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances have different dimensions or element values.
            </summary>
            <param name="x1">The first ComplexMatrix.</param>
            <param name="x2">The second ComplexMatrix.</param>
            <returns>Returns True if the two ComplexMatrix instances are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Inequality(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> have different dimensions 
            and element values.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Matrix.</param>
            <returns>Returns True if the ComplexMatrix and the Matrix are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Inequality(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> have different dimensions 
            and element values.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>Returns True if the Matrix and the ComplexMatrix are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Inequality(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A double.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Inequality(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise inequality operator for a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Inequality(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Inequality(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThan(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">The first ComplexMatrix.</param>
            <param name="x2">The second ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThan(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThan(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThan(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThan 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThan(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the GreaterThan 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThanOrEqual(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first ComplexMatrix.</param>
            <param name="x2">The second ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThanOrEqual(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThanOrEqual(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThanOrEqual(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_GreaterThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThan(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances using the LessThan operator pointwise.
            </summary>
            <param name="x1">The first ComplexMatrix.</param>
            <param name="x2">The second ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThan(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double using the LessThan operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThan(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThan(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThan operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThan(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThanOrEqual(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first ComplexMatrix.</param>
            <param name="x2">The second ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThanOrEqual(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThanOrEqual(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThanOrEqual(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_LessThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(Infragistics.Math.ComplexVector)~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a <see cref="T:Infragistics.Math.ComplexVector"/> to a <see cref="T:Infragistics.Math.ComplexMatrix"/>. 
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A Complex y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(Infragistics.Math.ComplexMatrix)~Infragistics.Math.ComplexVector">
            <summary>
            Casts a <see cref="T:Infragistics.Math.ComplexMatrix"/> to a <see cref="T:Infragistics.Math.ComplexVector"/>. 
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexVector y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(Infragistics.Math.Vector)~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Vector"/> to a <see cref="T:Infragistics.Math.ComplexMatrix"/>. 
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A Complex y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Implicit(Infragistics.Math.Complex)~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Complex"/> number to a unitary <see cref="T:Infragistics.Math.ComplexMatrix"/>. 
            </summary>
            <param name="x">A Complex number.</param>
            <returns>A unitary ComplexMatrix y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Implicit(System.Double)~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a double to a unitary <see cref="T:Infragistics.Math.ComplexMatrix"/>. 
            </summary>
            <param name="x">A Complex number.</param>
            <returns>A unitary ComplexMatrix y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Implicit(Infragistics.Math.Complex[])~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a Complex array to a row <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> array.</param>
            <returns>A row ComplexMatrix y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Implicit(System.Double[])~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a double array to a row <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x">A double array.</param>
            <returns>A row ComplexMatrix y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Implicit(Infragistics.Math.Matrix)~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Matrix"/> to a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A row ComplexMatrix y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(System.Int32[])~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts an int array to a row <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x">An int array.</param>
            <returns>A row ComplexMatrix y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(System.Int16[])~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a short array to a row <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x">A short array.</param>
            <returns>A row ComplexMatrix y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(System.Int64[])~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a long array to a row <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x">A long array.</param>
            <returns>A row ComplexMatrix y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(System.Single[])~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a float array to a row <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x">A float array.</param>
            <returns>A row ComplexMatrix y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.op_Explicit(System.Decimal[])~Infragistics.Math.ComplexMatrix">
            <summary>
            Casts a decimal array to a row <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x">A decimal array.</param>
            <returns>A row ComplexMatrix y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Acos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Acos(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Add(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] + x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Add(Infragistics.Math.ComplexMatrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] + x[i].
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Add(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] + x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Add(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] + x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Asin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Asin(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Atan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Atan(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Ceiling">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Ceiling(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Cis">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Cis(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cis(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CompareTo(Infragistics.Math.ComplexMatrix)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CompareTo(Infragistics.Math.Matrix)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CompareTo(System.Double)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CompareTo(Infragistics.Math.Complex)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Conj">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Conj(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Conj(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Cos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Cos(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Cosh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Cosh(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Divide(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] / x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Divide(Infragistics.Math.ComplexMatrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] / x[i].
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Divide(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] / x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Divide(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] / x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Exp">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Exp(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Floor">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Floor(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Log">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Log(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Log(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Log(y[i],B).
            </summary>
            <param name="B"></param>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Log2">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Log2(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Log10">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Log10(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Multiply(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] * x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Multiply(Infragistics.Math.ComplexMatrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] * x[i].
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Multiply(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] * x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Multiply(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] * x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Pow(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Pow(y[i],x[i]).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Pow(Infragistics.Math.ComplexMatrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Pow(y[i],x[i]).
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Pow(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Pow(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Pow(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Pow(y[i],x).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Round">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Round(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Sign">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Sign(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Sin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Sin(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Sinh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Sinh(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Sqrt">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Sqrt(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Subtract(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] - x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Subtract(Infragistics.Math.ComplexMatrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] - x[i].
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexMatrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Subtract(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] - x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Subtract(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with y[i] - x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexMatrix.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Tan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Tan(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Tanh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i] with Tanh(y[i]).
            </summary>
            <returns>The modified ComplexMatrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.ComplexMatrix"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CumProduct(System.Int32)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i1,..,iN,..,iM] with 
            y[i1,..,0,..,iM]*...*y[i1,..,iN,..,iM].
            </summary>
            <param name="N">The calculation dimension.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.ComplexMatrix,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexMatrix.CumSum(System.Int32)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexMatrix"/>, y, by replacing each element y[i1,..,iN,..,iM] with 
            y[i1,..,0,..,iM]+...+y[i1,..,iN,..,iM].
            </summary>
            <param name="N">The calculation dimension.</param>
            <returns>The modified ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Matrix,System.Int32)"/>
        </member>
        <member name="P:Infragistics.Math.ComplexMatrix.Item(System.Int32[])">
            <summary>
            An indexer for the <see cref="T:Infragistics.Math.ComplexMatrix"/>. The Matrix can be indexed one-dimensionally or multi-dimensionally.
            </summary>
            <param name="subscript">A sequence of indices that correspond to the dimensions of the ComplexMatrix.</param>
            <returns>The element specified by the subscript.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the ComplexMatrix is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="subscript"/> is non-unitary and has a different number of dimensions than 
            the ComplexMatrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index is out of the bounds of the ComplexMatrix.
            </exception>
        </member>
        <member name="P:Infragistics.Math.ComplexMatrix.Item(Infragistics.Math.Vector[])">
            <summary>
            An indexer for the <see cref="T:Infragistics.Math.ComplexMatrix"/> that takes a series of <see cref="T:Infragistics.Math.Vector"/> subscripts. 
            The ComplexMatrix can be indexed one-dimensionally or multi-dimensionally.
            </summary>
            <param name="subscript">An array of index Vectors.</param>
            <returns>A ComplexMatrix containing the elements specified by the <paramref name="subscript"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the ComplexMatrix is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="subscript"/> is non-unitary and has a different number of dimensions than 
            the ComplexMatrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index is out of the bounds of the ComplexMatrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index has a non-integer value.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the set value does not align with the elements specified by the subscript.
            </exception>
        </member>
        <member name="T:Infragistics.Math.ComplexVector">
            <summary>
            A ComplexVector is a list of <see cref="T:Infragistics.Math.Complex"/> numbers with an additional dimensionality property that
            specifies its orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComplexVector.Empty">
            <summary>
            Returns the empty <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.#ctor">
            <summary>
            Initializes an empty <see cref="T:Infragistics.Math.ComplexVector"/> instance.
            </summary>
            <seealso cref="M:Infragistics.Math.MatrixBase.IsEmpty"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.#ctor(System.Int32)">
            <summary>
            Initializes a row zero <see cref="T:Infragistics.Math.ComplexVector"/> of a specified <paramref name="length"/>. 
            </summary>
            <param name="length">The length of the constructed ComplexVector.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.#ctor(Infragistics.Math.Complex,System.Int32)">
            <summary>
            Initializes a row <see cref="T:Infragistics.Math.ComplexVector"/> of the specified <paramref name="length"/> and 
            the specified <paramref name="value"/>.
            </summary>
            <param name="value">The value assigned to each element of the constructed ComplexVector.</param>
            <param name="length">The length of the constructed ComplexVector.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.#ctor(System.Collections.Generic.IList{Infragistics.Math.Complex})">
            <summary>
            Initializes a row <see cref="T:Infragistics.Math.ComplexVector"/> with the specified <paramref name="elements"/>.
            </summary>
            <param name="elements">The elements of the constructed ComplexVector.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.#ctor(System.Collections.Generic.IList{Infragistics.Math.Complex},System.Int32[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.ComplexVector"/> with the specified <paramref name="elements"/> and <paramref name="dimensions"/>.
            </summary>
            <param name="elements">The elements of the constructed ComplexVector.</param>
            <param name="dimensions">The dimensions of the constructed ComplexVector.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the dimensions specify a size that is inconsistent with the length of the elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.#ctor(Infragistics.Math.VectorType,Infragistics.Math.Complex[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.ComplexVector"/> with the specified elements <paramref name="x"/>.
            </summary>
            <param name="type">An enum that specifies the orientation of the ComplexVector.</param>
            <param name="x">A Complex array of elements.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.ComplexVector"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CopyTo(Infragistics.Math.Complex[],System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.ComplexVector"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.ComplexVector"/> with <paramref name="x"/> for equality.
            </summary>
            <param name="x">An object.</param>
            <returns>Returns True if the ComplexVector is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.GetHashCode">
            <summary>
            Returns a hash code for the <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.System#Collections#Generic#IEnumerable{Infragistics#Math#Complex}#GetEnumerator">
            <summary>
            Returns an <see cref="T:Infragistics.Math.Complex"/> enumerator for the <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.System#ICloneable#Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Addition(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Adds two <see cref="T:Infragistics.Math.ComplexVector"/> instances pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Addition(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Addition(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Addition(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.ComplexVector"/> and a double pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Addition(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Adds a double and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Addition(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Addition(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Subtraction(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Subtracts two <see cref="T:Infragistics.Math.ComplexVector"/> instances pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Subtraction(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Subtraction(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Subtraction(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.ComplexVector"/> and a double pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Subtraction(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Subtracts a double and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Subtraction(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Subtraction(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Multiply(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Multiplies two <see cref="T:Infragistics.Math.ComplexVector"/> instances pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Multiply(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Multiply(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Multiply(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.ComplexVector"/> and a double pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Multiply(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Multiplies a double and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Multiply(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Multiply(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Division(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Divides two <see cref="T:Infragistics.Math.ComplexVector"/> instances pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Division(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Division(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Division(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.ComplexVector"/> and a double pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Division(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Multiplies a double and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Division(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Division(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/> pointwise.
            </summary>
            <returns>A ComplexVector y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Equality(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.ComplexVector"/> instances have the same dimensions and element values.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>Returns True if the two ComplexVector instances are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Equality(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> have the same dimensions 
            and element values.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>Returns True if the ComplexVector and the Vector are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Equality(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> have the same dimensions 
            and element values.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>Returns True if the Vector and the ComplexVector are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Equality(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.ComplexVector"/> and a double.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A double.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Equality(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise equality operator for a double and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Equality(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Equality(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Inequality(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.ComplexVector"/> instances have different dimensions and element values.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>Returns True if the two ComplexVector instances are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Inequality(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> have different dimensions 
            and element values.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>Returns True if the ComplexVector and the Vector are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Inequality(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Determines whether a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> have different dimensions 
            and element values.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>Returns True if the Vector and the ComplexVector are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Inequality(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.ComplexVector"/> and a double.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A double.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Inequality(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise inequality operator for a double and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Inequality(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Inequality(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThan(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexVector"/> instances using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThan(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a double using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThan(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexVector"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThan(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThan 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThan(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/> using the GreaterThan 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThanOrEqual(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexVector"/> instances using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThanOrEqual(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a double using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThanOrEqual(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexVector"/> using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThanOrEqual(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_GreaterThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThan(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexVector"/> instances using the LessThan operator pointwise.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThan(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a double using the LessThan operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThan(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexVector"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThan(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThan operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThan(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThanOrEqual(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.ComplexVector"/> instances using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThanOrEqual(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a double using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThanOrEqual(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.ComplexVector"/> using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThanOrEqual(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_LessThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Implicit(Infragistics.Math.Complex)~Infragistics.Math.ComplexVector">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Complex"/> number to a unitary <see cref="T:Infragistics.Math.ComplexVector"/>. 
            </summary>
            <param name="x">A Complex number.</param>
            <returns>A unitary ComplexVector y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Implicit(System.Double)~Infragistics.Math.ComplexVector">
            <summary>
            Casts a double to a unitary <see cref="T:Infragistics.Math.ComplexVector"/>. 
            </summary>
            <param name="x">A Complex number.</param>
            <returns>A unitary ComplexVector y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Explicit(Infragistics.Math.ComplexVector)~Infragistics.Math.Complex[]">
            <summary>
            Casts a <see cref="T:Infragistics.Math.ComplexVector"/> to a Complex array. 
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.Complex"/> array y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Implicit(Infragistics.Math.Complex[])~Infragistics.Math.ComplexVector">
            <summary>
            Casts a Complex array to a row <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> array.</param>
            <returns>A row ComplexVector y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Implicit(System.Double[])~Infragistics.Math.ComplexVector">
            <summary>
            Casts a double array to a row <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A double array.</param>
            <returns>A row ComplexVector y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Implicit(Infragistics.Math.Vector)~Infragistics.Math.ComplexVector">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Vector"/> to a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A row ComplexVector y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Explicit(System.Int32[])~Infragistics.Math.ComplexVector">
            <summary>
            Casts an int array to a row <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">An int array.</param>
            <returns>A row ComplexVector y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Explicit(System.Int16[])~Infragistics.Math.ComplexVector">
            <summary>
            Casts a short array to a row <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A short array.</param>
            <returns>A row ComplexVector y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Explicit(System.Int64[])~Infragistics.Math.ComplexVector">
            <summary>
            Casts a long array to a row <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A long array.</param>
            <returns>A row ComplexVector y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Explicit(System.Single[])~Infragistics.Math.ComplexVector">
            <summary>
            Casts a float array to a row <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A float array.</param>
            <returns>A row ComplexVector y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.op_Explicit(System.Decimal[])~Infragistics.Math.ComplexVector">
            <summary>
            Casts a decimal array to a row <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A decimal array.</param>
            <returns>A row ComplexVector y, where y[i] = (Complex)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Acos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Acos(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Add(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] + x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Add(Infragistics.Math.ComplexVector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] + x[i].
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Add(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] + x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Add(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] + x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Asin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Asin(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Atan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Atan(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Ceiling">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Ceiling(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Cis">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Cis(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CompareTo(Infragistics.Math.ComplexVector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CompareTo(Infragistics.Math.Vector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CompareTo(System.Double)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CompareTo(Infragistics.Math.Complex)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Conj">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Conj(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Conj(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Cos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Cos(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Cosh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Cosh(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Divide(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] / x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Divide(Infragistics.Math.ComplexVector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] / x[i].
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Divide(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] / x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Divide(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] / x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Exp">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Exp(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Floor">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Floor(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Log">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Log(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Log(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Log(y[i],B).
            </summary>
            <param name="B"></param>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Log2">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Log2(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Log10">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Log10(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Multiply(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] * x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Multiply(Infragistics.Math.ComplexVector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] * x[i].
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Multiply(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] * x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Multiply(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] * x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Pow(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Pow(y[i],x[i]).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Pow(Infragistics.Math.ComplexVector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Pow(y[i],x[i]).
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Pow(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Pow(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Pow(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Pow(y[i],x).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Round">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Round(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Sign">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Sign(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Sin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Sin(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Sinh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Sinh(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Sqrt">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Sqrt(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Subtract(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] - x[i].
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Subtract(Infragistics.Math.ComplexVector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] - x[i].
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The modified ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the ComplexVector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Subtract(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] - x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Subtract(Infragistics.Math.Complex)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[i] - x.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified ComplexVector.</returns>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Tan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Tan(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Tanh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with Tanh(y[i]).
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.ComplexVector"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CumProduct">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[0]*...*y[i].
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.CumSum">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/>, y, by replacing each element y[i] with y[0]+...+y[i].
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Reverse">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/> by reversing the order of its elements.
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Sort">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.ComplexVector"/> by sorting the elements by value in ascending order.
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.ComplexVector.Transpose">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.ComplexVector"/> by switching its orientation. A row ComplexVector is converted to a 
            column ComplexVector and vice versa.
            </summary>
            <returns>The modified ComplexVector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="P:Infragistics.Math.ComplexVector.Item(System.Int32[])">
            <summary>
            An indexer that gets and sets a single element of a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="indices">An index that specifies an element of the ComplexVector.</param>
            <returns>The specified element of the ComplexVector.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the ComplexVector is indexed with more than two indices.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the ComplexVector is indexed below 0 or above its length.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if a row ComplexVector is indexed with two indices and the first index is greater than 0.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if a column ComplexVector is indexed with two indices and the second index is greater than 0.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the empty ComplexVector is indexed.
            </exception>
        </member>
        <member name="P:Infragistics.Math.ComplexVector.Item(Infragistics.Math.Vector)">
            <summary>
            An indexer that gets or sets a set of elements in a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="indices">A <see cref="T:Infragistics.Math.Vector"/> of integer indices.</param>
            <returns>A ComplexVector of elements specified by the <paramref name="indices"/></returns>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the ComplexVector is indexed below 0 or above its length.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the empty ComplexVector is indexed.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if the indices are not integers.
            </exception>
        </member>
        <member name="T:Infragistics.Math.Compute">
            <summary>
            Compute is an all-purpose class of mathematical functions designed to act on a variety of 
            mathematical objects.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Compute.Abs(System.Double)">
            <summary>
            Returns the absolute value of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The absolute value of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)">
            <summary>
            Returns the absolute value of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>. The absolute value of 
            a Complex number is its magnitude.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The absolute value of x.</returns>
            <see cref="P:Infragistics.Math.Complex.Mag"/>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the absolute value of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Abs(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Abs(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Abs"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Abs(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the absolute value of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Abs(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the absolute value of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Abs(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Abs(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Abs"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Abs(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the absolute value of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Abs(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Acos(System.Double)">
            <summary>
            Returns the arccosine of <paramref name="x"/>. Arccosine is the inverse of Cos(x) on the range [0 pi]. 
            </summary>
            <param name="x">A double.</param>
            <returns>The arccosine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Complex)">
            <summary>
            Returns the arccosine of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>. Arccosine is the 
            inverse of Cos(x) on the Complex plane.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The arccosine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the arccosine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Acos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Acos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Acos(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the arccosine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Acos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Acos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the arccosine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Acos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Acos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Acos(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the arccosine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Acos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Acos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Arg(System.Double)">
            <summary>
            The argument of a <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The argument of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)">
            <summary>
            The argument of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>. The argument of the complex number is 
            equivalent to the phase angle of a Complex number.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The argument of x.</returns>
            <seealso cref="P:Infragistics.Math.Complex.Phase"/>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the argument of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Arg(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Arg(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Arg"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Arg(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the argument of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Arg(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the argument of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Arg(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Arg(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Arg"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Arg(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the argument of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Arg(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Asin(System.Double)">
            <summary>
            Returns the arcsine of <paramref name="x"/>. Arcsine is the inverse of sin(x) on the range [-pi/2 pi/2]. 
            </summary>
            <param name="x">A double.</param>
            <returns>The arcsine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Complex)">
            <summary>
            Returns the arcsine of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>. Arcsine is the inverse of Sin(x) on the Complex plane.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The arcsine of a x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the arcsine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Asin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Asin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Asin(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the arcsine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Asin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Asin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the arcsine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Asin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Asin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Asin(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the arcsine of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Asin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Asin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan(System.Double)">
            <summary>
            Returns the arctangent of <paramref name="x"/>. Arctangent is the inverse of Tan(x) on [-pi/2 pi/2]. 
            </summary>
            <param name="x">A double.</param>
            <returns>the arctangent of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan2(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Complex)">
            <summary>
            Returns the arctangent of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>. Arctangent is the 
            inverse of Tan(x) on the Complex plane.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>the arctangent of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan2(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the arctangent of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Atan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Atan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the arctangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Atan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Atan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the arctangent of each element of <paramref name="x"/>. 
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Atan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Atan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the arctangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Atan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Atan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan2(System.Double,System.Double)">
            <summary>
            Returns the four-quadrant arctangent of <paramref name="y"/>/<paramref name="x"/>. Atan2 is the Arg{x + yi}. 
            </summary>
            <param name="x">The first double.</param>
            <param name="y">The second double.</param>
            <returns>The four-quadrant arctangent of y/x.</returns>
            <see cref="M:Infragistics.Math.Compute.Tan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Atan2(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns the arctangent of <paramref name="y"/>/<paramref name="x"/> on the <see cref="T:Infragistics.Math.Complex"/> plane.
            </summary>
            <param name="x">The first Complex number.</param>
            <param name="y">The second Complex number.</param>
            <returns>Returns the arctangent of y/x.</returns>
            <see cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Ceiling(System.Double)">
            <summary>
            Returns the smallest integer greater than or equal to <paramref name="x"/>. 
            </summary>
            <param name="x">A double.</param>
            <returns>The ceiling of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Round(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Complex)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Complex"/> number composed of the smallest integers greater than or equal to the real and
            imaginary parts of <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The ceiling of x: Ceiling(Re{x}) + i*Ceiling(Im{x}).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the ceiling of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Ceiling(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Ceiling"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the ceiling of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Ceiling(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Ceiling"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the ceiling of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Ceiling(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Ceiling"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the ceiling of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Ceiling(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Ceiling"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cis(System.Double)">
            <summary>
            Returns the exponential function of a purely imaginary number.
            </summary>
            <param name="x">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.Complex"/> number of the form: Exp(i*x) = Cos(x) + i*Sin(x).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cis(Infragistics.Math.Complex)">
            <summary>
            Returns the Cis function for a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>A Complex number of the form: Exp(i*x) = Cos(x) + i*Sin(x).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cis(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the Cis of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>A Vector y, where y[i] = Cis(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Cis(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cis(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the Cis of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Cis(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Cis(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Cis"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cis(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the Cis of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>A Matrix y, where y[i] = Cis(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Cis(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cis(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the Cis of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Cis(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Cis(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Cis"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Conj(System.Double)">
            <summary>
            Returns the Complex conjugate of <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number of the form: a + bi.</param>
            <returns>A Complex number of the form: a - bi.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Conj(Infragistics.Math.Complex)">
            <summary>
            Returns the Complex conjugate of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number of the form: a + bi.</param>
            <returns>A Complex number of the form: a - bi.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Conj(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the Complex conjugate of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A ComplexVector y, where y[i] = Conj(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Conj(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Conj(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the Complex conjugate of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Conj(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Conj(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Conj"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Conj(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the Complex conjugate of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Conj(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Conj(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Conj(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the Complex conjugate of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Conj(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Conj(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Conj"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cos(System.Double)">
            <summary>
            Returns the cosine of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The cosine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Acos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Asin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)">
            <summary>
            Returns the cosine of a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The cosine of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Cos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Cos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cos(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector</param>
            <returns>A ComplexVector y, where y[i] = Cos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Cos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Cos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Cos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cos(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix</param>
            <returns>A ComplexMatrix y, where y[i] = Cos(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Cos"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cosh(System.Double)">
            <summary>
            Returns the hyperbolic cosine of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The hyperbolic cosine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Complex)">
            <summary>
            Returns the hyperbolic cosine of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The hyperbolic cosine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the hyperbolic cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Cosh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Cosh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the hyperbolic cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Cosh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Cosh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the hyperbolic cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Cosh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Cosh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the hyperbolic cosine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Cosh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Cosh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Exp(System.Double)">
            <summary>
            Returns the number e raised to the power <paramref name="x"/>. 
            </summary>
            <param name="x">A double.</param>
            <returns>The exponential function of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Complex)">
            <summary>
            Returns the number e raised to the power <paramref name="x"/>. 
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The exponential function of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the exponential function of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Exp(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Exp"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Exp(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the exponential function of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Exp(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Exp"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the exponential function of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Exp(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Exp"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Exp(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the exponential function of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Exp(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Exp"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Floor(System.Double)">
            <summary>
            Returns the largest integer less than or equal to <paramref name="x"/>. 
            </summary>
            <param name="x">A double.</param>
            <returns>The floor of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Round(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Complex)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Complex"/> number composed of the largest integers less than or equal to the real and
            imaginary parts of <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The floor of x: Floor(Re{x}) + i*Floor(Im{x}).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the Floor of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Floor(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Floor"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Floor(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the Floor of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Floor(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Floor"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the Floor of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Floor(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Floor"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Floor(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the Floor of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Floor(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Floor"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Imaginary(System.Double)">
            <summary>
            Returns the imaginary part of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The imaginary part of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Imaginary(Infragistics.Math.Complex)">
            <summary>
            Returns the imaginary part of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The imaginary part of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Imaginary(Infragistics.Math.Vector)">
            <summary>
            Returns the imaginary part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>A Vector y, where y[i] = Imaginary(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Imaginary(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the imaginary part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexVector"/>.</param>
            <returns>A ComplexVector y, where y[i] = Imaginary(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Imaginary(Infragistics.Math.Matrix)">
            <summary>
            Returns the imaginary part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>A Matrix y, where y[i] = Imaginary(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Imaginary(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the imaginary part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexMatrix"/>.</param>
            <returns>A ComplexMatrix y, where y[i] = Imaginary(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsEven(System.Double)">
            <summary>
            Returns True if <paramref name="x"/> is an even number; False otherwise.
            </summary>
            <param name="x">A double.</param>
            <returns>True if x is an even number; false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsInf(System.Double)">
            <summary>
            Returns True if <paramref name="x"/> is Inf; False otherwise.
            </summary>
            <param name="x">A double.</param>
            <returns>True if x is Inf; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsInf(Infragistics.Math.Complex)">
            <summary>
            Returns True if <paramref name="x"/> is Inf; False otherwise.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>True if x is Inf; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsNegInf(System.Double)">
            <summary>
            Returns True if <paramref name="x"/> is -Inf; False otherwise.
            </summary>
            <param name="x">A double.</param>
            <returns>True if x is -Inf; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsNegInf(Infragistics.Math.Complex)">
            <summary>
            Returns True if <paramref name="x"/> is -Inf; False otherwise.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>True if x is -Inf; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsNaN(System.Double)">
            <summary>
            Returns True if <paramref name="x"/> is NaN; False otherwise.
            </summary>
            <param name="x">A double.</param>
            <returns>True if x is NaN; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsNaN(Infragistics.Math.Complex)">
            <summary>
            Returns True if <paramref name="x"/> is NaN; False otherwise.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>True if x is NaN; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsOdd(System.Double)">
            <summary>
            Returns True if <paramref name="x"/> is an odd number; False otherwise.
            </summary>
            <param name="x">A double.</param>
            <returns>True if x is an odd number; false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(System.Double)">
            <summary>
            Returns the natural (base e) logarithm of <paramref name="x"/>. Log(x) is the inverse of Exp(x).
            </summary>
            <param name="x">A double.</param>
            <returns>The natural logarithm of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log10(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Exp(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(System.Double,System.Double)">
            <summary>
            Returns the base <paramref name="B"/> logarithm of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <param name="B">The base of the logarithm.</param>
            <returns>The base B logarithm of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log2(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log10(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex)">
            <summary>
            Returns the principal value of the <see cref="T:Infragistics.Math.Complex"/> logarithm of <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The natural logarithm of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns the principal value of the base <paramref name="B"/> <see cref="T:Infragistics.Math.Complex"/> logarithm 
            of <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <param name="B">The base of the logarithm.</param>
            <returns></returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the natural logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Log(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Log"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.Vector,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the base <paramref name="B"/> logarithm of each element 
            of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <param name="B">The base of the logarithm.</param>
            <returns>A Vector y, where y[i] = Log(x[i],B).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double,System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Log(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the natural logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Log(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Log"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the base <paramref name="B"/> logarithm of each element 
            of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="B">The base of the logarithm.</param>
            <returns>A ComplexVector y, where y[i] = Log(x[i],B).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Log(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the natural logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Log(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Log"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the base <paramref name="B"/> logarithm of each element 
            of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="B">The base of the logarithm.</param>
            <returns>A Matrix y, where y[i] = Log(x[i],B).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double,System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Log(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the natural logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Log(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Log"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the base <paramref name="B"/> logarithm of each element 
            of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="B">The base of the logarithm.</param>
            <returns>A ComplexMatrix y, where y[i] = Log(x[i],B).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Log(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log2(System.Double)">
            <summary>
            Returns the base 2 logarithm of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The base 2 logarithm of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log10(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Complex)">
            <summary>
            Returns the principal value of the base 2 <see cref="T:Infragistics.Math.Complex"/> logarithm of <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The base 2 logarithm of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the base 2 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Log2(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Log2"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log2(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the base 2 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Log2(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Log2"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the base 2 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Log2(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Log2"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log2(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the base 2 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Log2(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Log2"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log10(System.Double)">
            <summary>
            Returns the base 10 logarithm of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The base 10 logarithm of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Complex)">
            <summary>
            Returns the principal value of the base 10 <see cref="T:Infragistics.Math.Complex"/> logarithm of <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The base 10 logarithm of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the base 10 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Log10(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Log10"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log10(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the base 10 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Log10(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Log10"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the base 10 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Log10(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Log10"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Log10(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the base 10 logarithm of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Log10(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Log10"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(System.Double,System.Double)">
            <summary>
            Compares <paramref name="x1"/> to <paramref name="x2"/> and returns the largest one.
            </summary>
            <param name="x1">The first double.</param>
            <param name="x2">The second double.</param>
            <returns>x1 if x1 is greater than x2; x2 otherwise.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Min(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Compares <paramref name="x1"/> to <paramref name="x2"/> and returns the largest one.
            </summary>
            <param name="x1">The first <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="x2">The second Complex number.</param>
            <returns>
            x1 if the real part of x1 is greater than the real part of x2.
            x2 if the real part of x2 is greater than the real part of x1.
            x1 if x1 and x2 have the same real part, and the imaginary part of x1 is greater than the imaginary part of x2.
            x2 otherwise.
            </returns>
            <remarks>
            Complex numbers have no intrinsic ordering. Therefore the Max function is not unique.
            </remarks>
            <seealso cref="M:Infragistics.Math.Compute.Min(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(Infragistics.Math.Vector)">
            <summary>
            Returns the largest element of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>The largest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Max(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the largest element of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The largest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Max(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(Infragistics.Math.Matrix)">
            <summary>
            Returns the largest element of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The largest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Max(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the largest element of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The largest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Max(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the largest elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix with the largest elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Max(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Max(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the largest elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix with the largest elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Max(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(System.Double,System.Double)">
            <summary>
            Compares <paramref name="x1"/> to <paramref name="x2"/> and returns the smallest one.
            </summary>
            <param name="x1">The first double.</param>
            <param name="x2">The second double.</param>
            <returns>x1 if x1 is smaller than x2; x2 otherwise.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Max(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Compares <paramref name="x1"/> to <paramref name="x2"/> and returns the smallest one.
            </summary>
            <param name="x1">The first <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="x2">The second Complex number.</param>
            <returns>
            x1 if the magnitude of x1 is smaller than the magnitude of x2.
            y if the magnitude of x2 is smaller than the magntiude of x1.
            x1 if x1 and x2 have the same magnitude, and the phase of x1 is greater than the phase of x2.
            x2 otherwise.
            </returns>
            <remarks>
            Complex numbers have no intrinsic ordering. Therefore the Min function is not unique.
            </remarks>
            <seealso cref="M:Infragistics.Math.Compute.Max(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(Infragistics.Math.Vector)">
            <summary>
            Returns the smallest element of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>The smallest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Min(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the smallest element of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The smallest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Min(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(Infragistics.Math.Matrix)">
            <summary>
            Returns the smallest element of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The smallest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Min(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the smallest element of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The smallest element of x.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Min(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the smallest elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix with the smallest elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Min(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Min(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the smallest elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix with the smallest elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Min(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)">
            <summary>
            Returns <paramref name="x1"/> raised to the power <paramref name="x2"/>.
            </summary>
            <param name="x1">The first double.</param>
            <param name="x2">The second double.</param>
            <returns>x1 raised to the power x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.Complex)">
            <summary>
            Returns the principal value of <paramref name="x1"/> raised to the power <paramref name="x2"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>x1 raised to the power x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,System.Double)">
            <summary>
            Returns the principal value of <paramref name="x1"/> raised to the power <paramref name="x2"/>.
            </summary>
            <param name="x1">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="x2">A double.</param>
            <returns>x1 raised to the power x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)">
            <summary>
            Returns the principal value of <paramref name="x1"/> raised to the power <paramref name="x2"/>.
            </summary>
            <param name="x1">The first <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="x2">The second Complex number.</param>
            <returns>x1 raised to the power x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise power operation on two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>A Vector y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Pow(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Vector,System.Double)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Vector"/> and a double.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A double.</param>
            <returns>A Vector y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Pow(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise power operation on a double and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Vector.</param>
            <returns>A Vector y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Vector.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise power operation on two <see cref="T:Infragistics.Math.ComplexVector"/> instances.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Pow(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,System.Double)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.ComplexVector"/> and a double.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A double.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,System.Double)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Pow(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise power operation on a double and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Pow(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.ComplexVector"/> number and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Pow(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Vector"/> number and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise power operation on two <see cref="T:Infragistics.Math.Matrix"/> instances.
            </summary>
            <param name="x1">The first Matrix.</param>
            <param name="x2">The second Matrix.</param>
            <returns>A Matrix y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Pow(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Matrix"/> and a double.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A double.</param>
            <returns>A Matrix y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Pow(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise power operation on a double and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Matrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise power operation on two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances.
            </summary>
            <param name="x1">The first ComplexMatrix.</param>
            <param name="x2">The second ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Pow(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,System.Double)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a double.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A double.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,System.Double)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Pow(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise power operation on a double and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1[i],x2).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Pow(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1,x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.ComplexMatrix"/> number and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Matrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Pow(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the pointwise power operation on a <see cref="T:Infragistics.Math.Matrix"/> number and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Pow(x1[i],x2[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Random">
            <summary>
            Returns a double drawn from the uniform distribution between 0 and 1.
            </summary>
            <returns>A random double.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(System.Double,System.Double)">
            <summary>
            Returns a double drawn from the uniform distribution between the specified <paramref name="lowerBound"/> and 
            the specified <paramref name="upperBound"/>.
            </summary>
            <param name="lowerBound">A lower bound on the return value.</param>
            <param name="upperBound">An upper bound on the return value.</param>
            <returns>A random double.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when lowerBound is greater than upperBound.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(Infragistics.Math.Complex,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Complex"/> number drawn from the uniform distribution on the circle given by the
            specified <paramref name="origin"/> and <paramref name="radius"/>. 
            </summary>
            <param name="origin">The origin of a circle on the Complex plane.</param>
            <param name="radius">The radius of the circle.</param>
            <returns>A random Complex number.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if the radius is less than zero.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with <paramref name="N"/> numbers drawn from the uniform distrubition 
            between 0 and 1.
            </summary>
            <param name="N">The length of the Vector.</param>
            <returns>A Vector with N random numbers.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than zero.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(System.Int32,System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with <paramref name="N"/> numbers drawn from the uniform distrubition 
            between the <paramref name="lowerBound"/> and the <paramref name="upperBound"/>.
            </summary>
            <param name="N">The length of the Vector.</param>
            <param name="lowerBound">A lower bound on the elements of the return value.</param>
            <param name="upperBound">An upper bound on the elements of the return value.</param>
            <returns>A Vector with N random numbers.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when lowerBound is greater than upperBound.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(System.Int32,Infragistics.Math.Complex,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with <paramref name="N"/> <see cref="T:Infragistics.Math.Complex"/> numbers drawn from 
            the uniform distrubition on the circle specified by <paramref name="origin"/> and <paramref name="radius"/> 
            on the Complex plane.
            </summary>
            <param name="N">The length of the Vector.</param>
            <param name="origin">The origin of the specified circle.</param>
            <param name="radius">The radius of the specified circle.</param>
            <returns>A ComplexVector with N random numbers.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if the radius is less than zero.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> of values drawn from the uniform distribution between 0 and 1.
            </summary>
            <param name="size">A size <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>A Matrix of random values.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs for invalid size Vectors.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(Infragistics.Math.Vector,System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> of values drawn from the uniform distribution between 
            <paramref name="lowerBound"/> and <paramref name="upperBound"/>.
            </summary>
            <param name="size">A size <see cref="T:Infragistics.Math.Vector"/>.</param>
            <param name="lowerBound">A lower bound on the elements of the random Matrix.</param>
            <param name="upperBound">An upper bound on the elements of the random Matrix.</param>
            <returns>A Matrix of random values.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs for invalid size Vectors.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Random(Infragistics.Math.Vector,Infragistics.Math.Complex,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with <see cref="T:Infragistics.Math.Complex"/> numbers drawn from the uniform distrubition 
            on the circle specified by <paramref name="origin"/> and <paramref name="radius"/> on the Complex plane.
            </summary>
            <param name="size">A size <see cref="T:Infragistics.Math.Vector"/>.</param>
            <param name="origin">The origin of the specified circle.</param>
            <param name="radius">The radius of the specified circle.</param>
            <returns>A Matrix of random values.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs for invalid size Vectors.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Real(System.Double)">
            <summary>
            Returns the real part of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The real part of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Real(Infragistics.Math.Complex)">
            <summary>
            Returns the real part of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The real part of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Real(Infragistics.Math.Vector)">
            <summary>
            Returns the real part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>A Vector y, where y[i] = Real(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Real(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the real part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexVector"/>.</param>
            <returns>A ComplexVector y, where y[i] = Real(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Real(Infragistics.Math.Matrix)">
            <summary>
            Returns the real part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>A Matrix y, where y[i] = Real(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Real(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the real part of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexMatrix"/>.</param>
            <returns>A ComplexMatrix y, where y[i] = Real(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Round(System.Double)">
            <summary>
            Returns <paramref name="x"/> rounded to the nearest integer.
            </summary>
            <param name="x">A double.</param>
            <returns>Floor(x) if the decimal portion of x is less than 1/2; Ceiling(x) otherwise.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Round(Infragistics.Math.Complex)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Complex"/> number composed of the rounded values of the real and imaginary 
            parts of <paramref name="x"/>. 
            </summary>
            <param name="x">A Complex number.</param>
            <returns>A Complex number of the form: Round(Re{x}) + i*Round(Im{x}).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Round(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with each element of <paramref name="x"/> rounded to the nearest integer.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Round(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Round(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Round"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Round(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> composed of the rounded values of the real and imaginary 
            parts of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Round(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Round"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Round(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with each element of <paramref name="x"/> rounded to the nearest integer.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Round(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Round(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Round"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Round(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> composed of the rounded values of the real and imaginary 
            parts of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Round(x[i]).</returns>
            <see cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Round"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sign(System.Double)">
            <summary>
            Returns the sign of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>
             1 if x is greater than 0.
             0 if x equals 0.
            -1 if x is less than 0.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Sign(Infragistics.Math.Complex)">
            <summary>
            Returns the point on the <see cref="T:Infragistics.Math.Complex"/> unit circle nearest to x.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>
            0 if x is equal to 0.
            Exp(i*Arg{x}) otherwise.
            </returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Sign(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the sign of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Sign(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Sign"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sign(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the sign of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Sign(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Sign"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sign(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the sign of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Sign(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Sign"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sign(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the sign of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Sign(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Sign"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sin(System.Double)">
            <summary>
            Returns the sine of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The sine of x.</returns>
            <returns></returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Asin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Acos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)">
            <summary>
            Returns the sine of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The sine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Sin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Sin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sin(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Sin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Sin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Sin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Sin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sin(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Sin(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Sin"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sinh(System.Double)">
            <summary>
            Returns the hyperbolic sine of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The hyperbolic sine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Complex)">
            <summary>
            Returns the hyperbolic sine of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The hyperbolic sine of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the hyperbolic sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Sinh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Sinh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the hyperbolic sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Sinh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Sinh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the hyperbolic sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Sinh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Sinh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the hyperbolic sine of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Sinh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Sinh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(System.Double)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.Vector"/> containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(Infragistics.Math.Complex)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>A <see cref="T:Infragistics.Math.Vector"/> containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(Infragistics.Math.Vector)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>A Vector containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexVector"/>.</param>
            <returns>A <see cref="T:Infragistics.Math.Vector"/> containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(Infragistics.Math.BooleanVector)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.BooleanVector"/>.</param>
            <returns>A <see cref="T:Infragistics.Math.Vector"/> containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(Infragistics.Math.Matrix)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>A Vector containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexMatrix"/>.</param>
            <returns>A <see cref="T:Infragistics.Math.Vector"/> containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Size(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the size of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.BooleanMatrix"/>.</param>
            <returns>A <see cref="T:Infragistics.Math.Vector"/> containing the dimensions of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Sqrt(System.Double)">
            <summary>
            Returns the square-root of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The square-root of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.Complex)">
            <summary>
            Returns the square-root of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The square-root of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Complex,Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the square-root of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Sqrt(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Sqrt"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the square-root of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Sqrt(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Sqrt"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the square-root of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Sqrt(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Sqrt"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the square-root of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Sqrt(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Sqrt"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tan(System.Double)">
            <summary>
            Returns the tangent of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The tangent of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Asin(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Acos(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)">
            <summary>
            Returns the tangent of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The tangent of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Tan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Tan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tan(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Tan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Tan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Tan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Tan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tan(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Tan(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Tan"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tanh(System.Double)">
            <summary>
            Returns the hyperbolic tangent of <paramref name="x"/>.
            </summary>
            <param name="x">A double.</param>
            <returns>The hyperbolic tangent of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Complex)">
            <summary>
            Returns the hyperbolic tangent of a <see cref="T:Infragistics.Math.Complex"/> number <paramref name="x"/>.
            </summary>
            <param name="x">A Complex number.</param>
            <returns>The hyperbolic tangent of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Complex)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the hyperbolic tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Tanh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Vector.Tanh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the hyperbolic tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = Tanh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexVector.Tanh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the hyperbolic tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Tanh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(System.Double)"/>
            <seealso cref="M:Infragistics.Math.Matrix.Tanh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the hyperbolic tangent of each element of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix y, where y[i] = Tanh(x[i]).</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Complex)"/>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.Tanh"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Factor(System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> containing the prime factors of <paramref name="n"/>.
            </summary>
            <param name="n">A double.</param>
            <returns>The prime factors of n.</returns>
            <remarks>
            If n is not an integer, NaN is returned as a unitary Vector. If n is negative, the first element of the result
            is -1. 
            
            For integer-valued n: 
            
            	n == Product(Factors(n));
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Factorial(System.Double)">
            <summary>
            Returns <paramref name="n"/> factorial.
            </summary>
            <param name="n">A double.</param>
            <returns>n factorial.</returns>
            <remarks>
            If n is not a natural number, NaN is returned.
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Factorial(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> y, where y[i] = Factorial(x[i]).
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = Factorial(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Factorial(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> y, where y[i] = Factorial(x[i]).
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix y, where y[i] = Factorial(x[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Gcd(System.Double,System.Double)">
            <summary>
            Returns the greatest common divisor of <paramref name="m"/> and <paramref name="n"/> using Euclid's algorithm.
            </summary>
            <param name="m">The first double.</param>
            <param name="n">The second double.</param>
            <returns>The greatest common divisor of m and n.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsInt(System.Double)">
            <summary>
            Returns True if <paramref name="n"/> is integer valued; False otherwise.
            </summary>
            <param name="n">A double.</param>
            <returns>True if x is integer valued; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsInt(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = True if x[i] is integer valued; False otherwise.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>a BooleanVector y, where y[i] = True if x[i] is integer valued; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsInt(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = True if x[i] is integer valued; False otherwise.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>a BooleanMatrix y, where y[i] = True if x[i] is integer valued; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsNatural(System.Double)">
            <summary>
            Returns True if <paramref name="n"/> is a natrual number; False otherwise.
            </summary>
            <param name="n">A double.</param>
            <returns>True if x is a natural number; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsNatural(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = True if x[i] is a natural number; False otherwise.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>a BooleanVector y, where y[i] = True if x[i] is a natural number; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsNatural(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = True if x[i] is a natural number; False otherwise.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>a BooleanMatrix y, where y[i] = True iff x[i] is a natural number; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsPrime(System.Double)">
            <summary>
            Returns True if <paramref name="n"/> is a prime number; False otherwise.
            </summary>
            <param name="n">A double.</param>
            <returns>True if x is a prime number; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsPrime(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = True iff x[i] is a prime number.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>a BooleanVector y, where y[i] = True if x[i] is a prime number; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.IsPrime(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = True iff x[i] is integer valued.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <returns>a BooleanMatrix y, where y[i] = True if x[i] is integer valued</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Lcm(System.Double,System.Double)">
            <summary>
            Returns the least common multiple of <paramref name="m"/> and <paramref name="n"/>.
            </summary>
            <param name="m">The first double.</param>
            <param name="n">The second double.</param>
            <returns>The least common multiple of m and n.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.NChooseK(System.Double,System.Double)">
            <summary>
            Returns <paramref name="n"/> choose <paramref name="k"/>.
            </summary>
            <param name="n">The first double.</param>
            <param name="k">The second double. </param>
            <returns>n choose k.</returns>
            <remarks>
            If either n or k is not a natural number, or if k is greater than n, NaN is returned.
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Primes(System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> containing the primes before <paramref name="n"/>.
            </summary>
            <param name="n">A double.</param>
            <returns>The primes before n.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Append(Infragistics.Math.Vector[])">
            <summary>
            Appends a series of <see cref="T:Infragistics.Math.Vector"/> instances together.
            </summary>
            <param name="x">An array of Vectors with the same orientation.</param>
            <returns>
            A Vector which consists of the elements of each Vector in <paramref name="x"/> stacked in sequence.
            </returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the orientations of the Vectors in x do not align.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Append(Infragistics.Math.ComplexVector[])">
            <summary>
            Appends a series of <see cref="T:Infragistics.Math.ComplexVector"/> instances together.
            </summary>
            <param name="x">An array of ComplexVectors with the same orientation.</param>
            <returns>
            A ComplexVector which consists of the elements of each ComplexVector in <paramref name="x"/> stacked in sequence.
            </returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the orientations of the ComplexVectors in x do not align.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Append(Infragistics.Math.BooleanVector[])">
            <summary>
            Appends a series of <see cref="T:Infragistics.Math.BooleanVector"/> instances together.
            </summary>
            <param name="x">An array of BooleanVectors with the same orientation.</param>
            <returns>
            A BooleanVector which consists of the elements of each BooleanVector in <paramref name="x"/> stacked in sequence.
            </returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the orientations of the BooleanVectors in x do not align.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Append(Infragistics.Math.Matrix[])">
            <summary>
            Appends a series of <see cref="T:Infragistics.Math.Matrix"/> instances together.
            </summary>
            <param name="x">An array of Matrices all dimensions except the last one identical.</param>
            <returns>A Matrix.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the Matrices do not align.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Append(Infragistics.Math.ComplexMatrix[])">
            <summary>
            Appends a series of <see cref="T:Infragistics.Math.ComplexMatrix"/> instances together.
            </summary>
            <param name="x">An array of ComplexMatrices all dimensions except the last one identical.</param>
            <returns>A ComplexMatrix.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the ComplexMatrices do not align.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Append(Infragistics.Math.BooleanMatrix[])">
            <summary>
            Appends a series of <see cref="T:Infragistics.Math.BooleanMatrix"/> instances together.
            </summary>
            <param name="x">An array of BooleanMatrices all dimensions except the last one identical.</param>
            <returns>A BooleanMatrix.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the BooleanMatrix do not align.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Vector,System.Int32)">
            <summary>
            Returns a new <see cref="T:Infragistics.Math.Vector"/> y, where y[i] = n if x[i] is in the nth bin.
            </summary>
            <param name="x">A Vector.</param>
            <param name="N">The number of evenly-spaced bins.</param>
            <returns>A Vector of bin numbers.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than one.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns a new <see cref="T:Infragistics.Math.Vector"/> y, where y[i] = n if x[i] is in the nth bin.
            </summary>
            <param name="x">A Vector.</param>
            <param name="edges">edges[n] and edges[n+1] are the edges of the nth bin.</param>
            <returns>A Vector of bin numbers.</returns>
            <remarks>
            If x[i] is not in any bin, y[i] = Constant.NaN.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when there are less than two bin <paramref name="edges"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the bin edges are not in increasing order.
            </exception>
            <seealso cref="M:Infragistics.Math.Vector.Bin(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a new <see cref="T:Infragistics.Math.Matrix"/> y, where y[i1,..,iN] = n if x[i1,...,iN] is in the nth bin.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The number of evenly-spaced bins.</param>
            <returns>A Vector of bin numbers.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than one.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Matrix,Infragistics.Math.Vector)">
            <summary>
            Returns a new <see cref="T:Infragistics.Math.Matrix"/> y, where y[i] = n if x[i] is in the nth bin.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="edges">edges[n] and edges[n+1] are the edges of the nth bin.</param>
            <returns>A Vector of bin numbers.</returns>
            <remarks>
            If x[i] is not in any bin, y[i] = Constant.NaN.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when there are less than two bin <paramref name="edges"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the bin edges are not in increasing order.
            </exception>
            <seealso cref="M:Infragistics.Math.Vector.Bin(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CofactorMatrix(Infragistics.Math.Matrix,System.Int32,System.Int32)">
            <summary>
            Returns the (i,j) cofactor of <paramref name="x"/>. If i+j is even, the (i,j) cofactor is equal to the 
            determinant of the (i,j) minor <see cref="T:Infragistics.Math.Matrix"/> of x. If i+j is odd, the (i,j) cofactor is the negative 
            determinant of the (i,j) minor Matrix of x.
            </summary>
            <param name="x">A square Matrix.</param>
            <param name="i">A row index.</param>
            <param name="j">A column index.</param>
            <returns>The (i,j) cofactor of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not square.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if <paramref name="i"/> or <paramref name="j"/> are out of bounds.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.MinorMatrix(Infragistics.Math.Matrix,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CofactorMatrix(Infragistics.Math.ComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Returns the (i,j) cofactor of <paramref name="x"/>. If i+j is even, the (i,j) cofactor is equal to the 
            determinant of the (i,j) minor <see cref="T:Infragistics.Math.ComplexMatrix"/> of x. If i+j is odd, the (i,j) cofactor is the 
            negative determinant of the (i,j) minor ComplexMatrix of x.
            </summary>
            <param name="x">A square ComplexMatrix.</param>
            <param name="i">A row index.</param>
            <param name="j">A column index.</param>
            <returns>The (i,j) cofactor of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not square.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if <paramref name="i"/> or <paramref name="j"/> are out of bounds.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.MinorMatrix(Infragistics.Math.Matrix,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns the center convolution of two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>A Vector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the center convolution of a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A new ComplexVector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Returns the center convolution of a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the center convolution of two <see cref="T:Infragistics.Math.ComplexVector"/> instances.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.Vector,Infragistics.Math.Vector,Infragistics.Math.ConvolutionType)">
            <summary>
            Returns the convolution of two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <param name="type">
            Specified whether to return the full convolution or to return the center points and exclude some of 
            the edge effects.
            </param>
            <returns>A Vector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.Vector,Infragistics.Math.ComplexVector,Infragistics.Math.ConvolutionType)">
            <summary>
            Returns the convolution of a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <param name="type">
            Specified whether to return the full convolution or to return the center points and exclude some of 
            the edge effects.
            </param>
            <returns>A ComplexVector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.ComplexVector,Infragistics.Math.Vector,Infragistics.Math.ConvolutionType)">
            <summary>
            Returns the convolution of a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <param name="type">
            Specified whether to return the full convolution or to return the center points and exclude some of 
            the edge effects.
            </param>
            <returns>A ComplexVector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Convolve(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector,Infragistics.Math.ConvolutionType)">
            <summary>
            Returns the convolution of two <see cref="T:Infragistics.Math.ComplexVector"/> instances.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <param name="type">
            Specified whether to return the full convolution or to return the center points and exclude some of 
            the edge effects.
            </param>
            <returns>A ComplexVector y, where y[i] = DotProduct(x1[j],x2[i-j]).</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.Vector)">
            <summary>
            Returns the cumulative product of the elements of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>A Vector y, where y[i] = x[0]*...*x[i].</returns>
            <seealso cref="M:Infragistics.Math.Vector.CumProduct"/>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the cumulative product of the elements of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexVector"/>.</param>
            <returns>A ComplexVector y, where y[i] = x[0]*...*x[i].</returns>
            <seealso cref="M:Infragistics.Math.ComplexVector.CumProduct"/>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the cumulative product of the elements of <paramref name="x"/> along the Nth dimension.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y[i1,...,iN,...,iM] = x[i1,...,0,...,iM]*...*x[i1,...,iN,...,iM].</returns>
            <seealso cref="M:Infragistics.Math.Matrix.CumProduct(System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Matrix,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the cumulative product of the elements of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexMatrix"/>.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y[i1,...,iN,...,iM] = x[i1,...,0,...,iM]*...*x[i1,...,iN,...,iM].</returns>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.CumProduct(System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.ComplexMatrix,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Vector)">
            <summary>
            Returns the cumulative sum of the elements of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Vector"/>.</param>
            <returns>A Vector y, where y[i] = x[0]+...+x[i].</returns>
            <seealso cref="M:Infragistics.Math.Vector.CumSum"/>
            <seealso cref="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the cumulative sum of the elements of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexVector"/>.</param>
            <returns>A Vector y, where y[i] = x[0]+...+x[i].</returns>
            <seealso cref="M:Infragistics.Math.ComplexVector.CumSum"/>
            <seealso cref="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the cumulative sum of the elements of <paramref name="x"/> along the Nth dimension.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Matrix"/>.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y[i1,...,iN,...,iM] = x[i1,...,0,...,iM]+...+x[i1,...,iN,...,iM].</returns>
            <seealso cref="M:Infragistics.Math.Matrix.CumProduct(System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Matrix,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the cumulative sum of the elements of <paramref name="x"/>.
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexMatrix"/>.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y[i1,...,iN,...,iM] = x[i1,...,0,...,iM]+...+x[i1,...,iN,...,iM].</returns>
            <seealso cref="M:Infragistics.Math.ComplexMatrix.CumProduct(System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.ComplexMatrix,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Diagonal(Infragistics.Math.Matrix)">
            <summary>
            Returns the diagonal of an N-dimensional <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A [1 N] Matrix containing the diagonal of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Diagonal(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the diagonal of an N-dimensional <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A [1 N] ComplexMatrix containing the diagonal of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Diagonal(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns the diagonal of an N-dimensional <see cref="T:Infragistics.Math.BooleanMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A [1 N] BooleanMatrix containing the diagonal of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Difference(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the difference of successive values of <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = x[i+1] - x[i].</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the length of x is less than 2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Difference(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the difference of successive values of <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector y, where y[i] = x[i+1] - x[i].</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when the length of x is less than 2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Difference(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the difference of successive values of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/> 
            along the Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix with the difference of successive values of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the Nth dimension has less than two elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Difference(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the difference of successive values of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/> 
            along the Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix with the difference of successive values of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the Nth dimension has less than two elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Derivative(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the partial derivative of the <see cref="T:Infragistics.Math.Matrix"/> f along the Nth dimension.
            </summary>
            <param name="f">A Matrix representing a multi-dimensional function.</param>
            <param name="N">The calculation dimension.</param>
            <returns>The partial derivative of f with respect to the Nth dimension.</returns>
            <remarks>The spacing between the values of f is assumed to be 1.</remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Derivative(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the partial derivative of the <see cref="T:Infragistics.Math.ComplexMatrix"/> f along the Nth dimension.
            </summary>
            <param name="f">A ComplexMatrix representing a multi-dimensional function.</param>
            <param name="N">The calculation dimension.</param>
            <returns>The partial derivative of f with respect to the Nth dimension.</returns>
            <remarks>The spacing between the values of f is assumed to be 1.</remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Determinant(Infragistics.Math.Matrix)">
            <summary>
            Returns the determinant of a square <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A square Matrix.</param>
            <returns>The determinant of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not a square Matrix.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.MinorMatrix(Infragistics.Math.Matrix,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Determinant(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the determinant of a square <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A square ComplexMatrix.</param>
            <returns>The determinant of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not a square ComplexMatrix.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.MinorMatrix(Infragistics.Math.ComplexMatrix,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Find(Infragistics.Math.BooleanVector)">
            <summary>
            Find takes a <see cref="T:Infragistics.Math.BooleanVector"/> <paramref name="x"/> and returns the indices where x is True.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A Vector y, where y[j] = i when x[i] is the jth occurrence of True in x.</returns>
            <remarks>
            Find is meant to be used with the Compare operators on Vector and ComplexVector, which return
            BooleanVector instances. The following notation is convenient:
            
            int length = 1000;
            Vector x1 = Compute.Line(0,2,length);
            Vector x2 = new Vector(length);
            
            x2[Compute.Find(x1 &gt; 1)] = 1;
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Find(Infragistics.Math.BooleanMatrix)">
            <summary>
            Find takes a <see cref="T:Infragistics.Math.BooleanMatrix"/> <paramref name="x"/> and returns the indices where x is True.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A Vector y, where y[j] = i when x[i] is the jth occurrence of True in x.</returns>
            <remarks>
            Find is meant to be used with the Compare operators on Matrix and ComplexMatrix, which return
            BooleanMatrix instances. The following notation is convenient:
            
            int length = 1000;
            Matrix x1 = (Matrix)Compute.Line(0,2,length);
            Vector x2 = new Vector(length);
            
            x2[Compute.Find(x1 &gt; 1)] = 1;
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.IdentityMatrix(System.Int32[])">
            <summary>
            Returns an N-dimensional identity <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="N">The dimensions of the identity Matrix.</param>
            <returns>An N-dimensional identity Matrix.</returns>
            <remarks>
            If only one dimension is passed in, a two-dimensional square identity Matrix is returned.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when N[i] is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Index(System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> of successive indices from 0 to <paramref name="end"/>.
            </summary>
            <param name="end">The last element of the Vector.</param>
            <returns>A Vector of successive indices.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when end is less than 0.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Line(System.Double,System.Double,System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.Line(Infragistics.Math.Complex,Infragistics.Math.Complex,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Index(System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> of successive indices from <paramref name="start"/> to <paramref name="end"/>.
            </summary>
            <param name="start">The first index of the Vector.</param>
            <param name="end">The last index of the Vector.</param>
            <returns>A Vector of successive indices.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when either start or end is less than 0.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Line(System.Double,System.Double,System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.Line(Infragistics.Math.Complex,Infragistics.Math.Complex,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Index(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> of evenly spaced indices from <paramref name="start"/> 
            to <paramref name="end"/>.
            </summary>
            <param name="start">The first element of the Vector.</param>
            <param name="space">The spacing between the elements.</param>
            <param name="end">An upperbound on the last element of the Vector.</param>
            <returns>A Vector of evenly spaced indices.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when either start or end is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="space"/> is equal to 0 and start does not equal end.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when space is positive but start is greater than end.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when space is negative but start is less than end.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Line(System.Double,System.Double,System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.Line(Infragistics.Math.Complex,Infragistics.Math.Complex,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.IndexToSubscript(System.Int32,Infragistics.Math.Vector)">
            <summary>
            Returns the <see cref="T:Infragistics.Math.Matrix"/> subscript that corresponds with the one-dimensional <paramref name="index"/>.
            </summary>
            <param name="index">The one-dimensional Matrix index.</param>
            <param name="size">The dimensions of a Matrix.</param>
            <returns>The multi-dimensional subscript that corresponds to the one-dimensional index.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when size is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the index it out of the bounds specified by the size <see cref="T:Infragistics.Math.Vector"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when a dimensions is less than 1.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the size Vector has non-integer elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Line(System.Double,System.Double,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with evenly spaced elements.
            </summary>
            <param name="start">The first element of the Vector.</param>
            <param name="end">The last element of the Vector.</param>
            <param name="length">The length of the Vector.</param>
            <returns>A Vector with evenly spaced elements.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="length"/> is less than 1.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="start"/> equals <paramref name="end"/> but length does not equal 1.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="start"/> does not equal <paramref name="end"/> but length equals 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Index(System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.Index(System.Int32,System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.Index(System.Int32,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Line(Infragistics.Math.Complex,Infragistics.Math.Complex,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with evenly spaced <see cref="T:Infragistics.Math.Complex"/> elements.
            </summary>
            <param name="start">The first element of the ComplexVector.</param>
            <param name="end">The last element of the ComplexVector.</param>
            <param name="length">The length of the ComplexVector.</param>
            <returns>A ComplexVector with evenly spaced elements.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="length"/> is less than 1.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="start"/> equals <paramref name="end"/> but length does not equal 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Index(System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.Index(System.Int32,System.Int32)"/>
            <seealso cref="M:Infragistics.Math.Compute.Index(System.Int32,System.Int32,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Returns the product of two <see cref="T:Infragistics.Math.Matrix"/> instances.
            </summary>
            <param name="x1">The first two-dimensional Matrix.</param>
            <param name="x2">The second two-dimensional Matrix.</param>
            <returns>The product of two Matrices.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when either <paramref name="x1"/> or <paramref name="x2"/> is not two-dimensional.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.Vector,Infragistics.Math.Matrix)">
            <summary>
            Returns the product of a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">The Vector.</param>
            <param name="x2">The two-dimensional Matrix.</param>
            <returns>The product of the Vector and Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when <paramref name="x2"/> is not two-dimensional.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.Matrix,Infragistics.Math.Vector)">
            <summary>
            Returns the product of a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">The two-dimensional Matrix.</param>
            <param name="x2">The Vector.</param>
            <returns>The product of the Matrix and Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when <paramref name="x1"/> is not two-dimensional.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns the product of two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>The product of two Vectors.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the product of two <see cref="T:Infragistics.Math.ComplexMatrix"/> instances.
            </summary>
            <param name="x1">The first two-dimensional ComplexMatrix.</param>
            <param name="x2">The second two-dimensional ComplexMatrix.</param>
            <returns>The product of two ComplexMatrices.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when either <paramref name="x1"/> or <paramref name="x2"/> is not two-dimensional.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the product of a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/>.
            </summary>
            <param name="x1">The ComplexVector.</param>
            <param name="x2">The two-dimensional ComplexMatrix.</param>
            <returns>The product of the ComplexVector and ComplexMatrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when <paramref name="x2"/> is not two-dimensional.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.ComplexMatrix,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the product of a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x1">The two-dimensional ComplexMatrix.</param>
            <param name="x2">The ComplexVector.</param>
            <returns>The product of the ComplexMatrix and ComplexVector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when <paramref name="x1"/> is not two-dimensional.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MatrixProduct(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the product of two <see cref="T:Infragistics.Math.ComplexVector"/> instances.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>The product of two ComplexVectors.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the second dimension of x1 is not the same size as the first dimension of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MinorMatrix(Infragistics.Math.Matrix,System.Int32,System.Int32)">
            <summary>
            Returns the (i,j) minor <see cref="T:Infragistics.Math.Matrix"/> of <paramref name="x"/>. The (i,j) minor Matrix of x is the 
            result of removing the ith row and jth column of x.
            </summary>
            <param name="x">A two-dimensional Matrix.</param>
            <param name="i">A row index.</param>
            <param name="j">A column index.</param>
            <returns>The (i,j) minor Matrix</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not two-dimensional.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if <paramref name="i"/> or <paramref name="j"/> are out of bounds.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MinorMatrix(Infragistics.Math.ComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Returns the (i,j) minor <see cref="T:Infragistics.Math.ComplexMatrix"/> of <paramref name="x"/>. The (i,j) minor ComplexMatrix 
            of x is the result of removing the ith row and jth column of x.
            </summary>
            <param name="x">A two-dimensional ComplexMatrix.</param>
            <param name="i">A row index.</param>
            <param name="j">A column index.</param>
            <returns>The (i,j) minor ComplexMatrix</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not two-dimensional.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if <paramref name="i"/> or <paramref name="j"/> are out of bounds.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.MinorMatrix(Infragistics.Math.BooleanMatrix,System.Int32,System.Int32)">
            <summary>
            Returns the (i,j) minor <see cref="T:Infragistics.Math.BooleanMatrix"/> of <paramref name="x"/>. The (i,j) minor BooleanMatrix 
            of x is the result of removing the ith row and jth column of x.
            </summary>
            <param name="x">A two-dimensional BooleanMatrix.</param>
            <param name="i">A row index.</param>
            <param name="j">A column index.</param>
            <returns>The (i,j) minor BooleanMatrix</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not two-dimensional.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if <paramref name="i"/> or <paramref name="j"/> are out of bounds.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Product(Infragistics.Math.Vector)">
            <summary>
            Returns the product of the elements of a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A double y, where y = x[0]*...*x[N].</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sum(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Product(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the product of the elements of a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.Complex"/> number y, where y = x[0]*...*x[N].</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sum(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Product(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the product of the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix with the product of the elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Product(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the product of the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix with the product of the elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Repeat(Infragistics.Math.Vector,System.Int32)">
            <summary>
            Appends a <see cref="T:Infragistics.Math.Vector"/> to itself <paramref name="N"/> times.
            </summary>
            <param name="x">A Vector.</param>
            <param name="N">The number of repeats.</param>
            <returns>A Vector composed of <paramref name="x"/> appended to itself N times.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Repeat(Infragistics.Math.ComplexVector,System.Int32)">
            <summary>
            Appends a <see cref="T:Infragistics.Math.ComplexVector"/> to itself <paramref name="N"/> times.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="N">The number of repeats.</param>
            <returns>A ComplexVector composed of <paramref name="x"/> appended to itself N times.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Repeat(Infragistics.Math.BooleanVector,System.Int32)">
            <summary>
            Appends a <see cref="T:Infragistics.Math.BooleanVector"/> to itself <paramref name="N"/> times.
            </summary>
            <param name="x">A BooleanVector.</param>
            <param name="N">The number of repeats.</param>
            <returns>A BooleanVector composed of <paramref name="x"/> appended to itself N times.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Repeat(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Appends a <see cref="T:Infragistics.Math.Matrix"/> to itself <paramref name="N"/> times along a new dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The number of repeats.</param>
            <returns>A Matrix composed of <paramref name="x"/> appended to itself N times.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Repeat(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Appends a <see cref="T:Infragistics.Math.ComplexMatrix"/> to itself <paramref name="N"/> times along a new dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The number of repeats.</param>
            <returns>A ComplexMatrix composed of <paramref name="x"/> appended to itself N times.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Repeat(Infragistics.Math.BooleanMatrix,System.Int32)">
            <summary>
            Appends a <see cref="T:Infragistics.Math.BooleanMatrix"/> to itself <paramref name="N"/> times along a new dimension.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <param name="N">The number of repeats.</param>
            <returns>A BooleanMatrix composed of <paramref name="x"/> appended to itself N times.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than 0.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the elements of <paramref name="x"/> in reverse order.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = x[N-i-1].</returns>
            <seealso cref="M:Infragistics.Math.Vector.Reverse"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the elements of <paramref name="x"/> in reverse order.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector y, where y[i] = x[N-i-1].</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.BooleanVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanVector"/> with the elements of <paramref name="x"/> in reverse order.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector y, where y[i] = x[N-i-1].</returns>
            <seealso cref="M:Infragistics.Math.BooleanVector.Reverse"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the elements of <paramref name="x"/> in reverse order along the
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y[0,...iN,...,M] = x[0,...,length-iN-1,...,M].</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the elements of <paramref name="x"/> in reverse order along the
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y[0,...iN,...,M] = x[0,...,length-iN-1,...,M].</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.BooleanMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> with the elements of <paramref name="x"/> in reverse order along the
            Nth dimension.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A BooleanMatrix y, where y[0,...iN,...,M] = x[0,...,length-iN-1,...,M].</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Switch(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> equal to <paramref name="x"/> with the dimensions switched.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector equal to x with the dimensions switched.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Switch(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> equal to <paramref name="x"/> with the dimensions switched.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector equal to x with the dimensions switched.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Switch(Infragistics.Math.Matrix,System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> equal to <paramref name="x"/> with the dimensions N1 and N2 switched.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N1">The first dimension.</param>
            <param name="N2">The second dimension.</param>
            <returns>A Matrix equal to x with the dimensions N1 and N2 switched.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Switch(Infragistics.Math.ComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> equal to <paramref name="x"/> with the dimensions N1 and N2 switched.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N1">The first dimension.</param>
            <param name="N2">The second dimension.</param>
            <returns>A ComplexMatrix equal to x with the dimensions N1 and N2 switched.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Switch(Infragistics.Math.BooleanMatrix,System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> equal to <paramref name="x"/> with the dimensions N1 and N2 switched.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <param name="N1">The first dimension.</param>
            <param name="N2">The second dimension.</param>
            <returns>A BooleanMatrix equal to x with the dimensions N1 and N2 switched.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the elements contained in <paramref name="x1"/> that 
            are not contained in <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>The elements in x1 that are not in x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the elements contained in <paramref name="x1"/> that 
            are not contained in <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>The elements in x1 that are not in x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the elements contained in <paramref name="x1"/> that 
            are not contained in <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>The elements in x1 that are not in x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the elements contained in <paramref name="x1"/> that 
            are not contained in <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>The elements in x1 that are not in x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the elements common to both <paramref name="x1"/> and
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>The elements common to x1 and x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the elements common to both <paramref name="x1"/> and
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>The elements common to x1 and x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the elements common to both <paramref name="x1"/> and
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>The elements common to x1 and x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the elements common to both <paramref name="x1"/> and
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>The elements common to x1 and x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with all elements contained in either <paramref name="x1"/> or
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>The elements in either x1 or x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with all elements contained in either <paramref name="x1"/> or
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>The elements in either x1 or x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with all elements contained in either <paramref name="x1"/> or
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>The elements in either x1 or x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SetUnion(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with all elements contained in either <paramref name="x1"/> or
            <paramref name="x2"/>. The result is sorted and unique.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>The elements in either x1 or x2.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x1 and x2 do not have the same orientation.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.SetDifference(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.SetIntersection(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sort(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the elements of <paramref name="x"/> sorted by value in ascending order.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector with the sorted values of x.</returns>
            <seealso cref="M:Infragistics.Math.Vector.Sort"/>
            <seealso cref="M:Infragistics.Math.Compute.Unique(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sort(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> with the elements of <paramref name="x"/> sorted by value 
            in ascending order.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector with the sorted values of x.</returns>
            <seealso cref="M:Infragistics.Math.ComplexVector.Sort"/>
            <seealso cref="M:Infragistics.Math.Compute.Unique(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sort(Infragistics.Math.BooleanVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanVector"/> with the elements of <paramref name="x"/> sorted by value 
            in ascending order.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector with the sorted values of x.</returns>
            <seealso cref="M:Infragistics.Math.BooleanVector.Sort"/>
            <seealso cref="M:Infragistics.Math.Compute.Unique(Infragistics.Math.BooleanVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sort(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the elements of <paramref name="x"/> in sorted in increasing order along the
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y equals x sorted along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Sort(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the elements of <paramref name="x"/> in sorted in increasing 
            order along the Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y equals x sorted along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Sort(Infragistics.Math.BooleanMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> with the elements of <paramref name="x"/> in sorted in increasing 
            order along the Nth dimension.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A BooleanMatrix y, where y equals x sorted along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Squeeze(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> equivalent to <paramref name="x"/> with unitary dimensions removed.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix equivalent to x with unitary dimensions removed.</returns>
            <seealso cref="M:Infragistics.Math.MatrixBase.Squeeze"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Squeeze(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> equivalent to <paramref name="x"/> with unitary dimensions removed.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix equivalent to x with unitary dimensions removed.</returns>
            <seealso cref="M:Infragistics.Math.MatrixBase.Squeeze"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Squeeze(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> equivalent to <paramref name="x"/> with unitary dimensions removed.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanMatrix equivalent to x with unitary dimensions removed.</returns>
            <seealso cref="M:Infragistics.Math.MatrixBase.Squeeze"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SubscriptToIndex(System.Int32[],Infragistics.Math.Vector)">
            <summary>
            Returns the one-dimensional index that corresponds with the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="subscript"/>.
            </summary>
            <param name="subscript">The Matrix subscript.</param>
            <param name="size">The dimensions of a Matrix.</param>
            <returns>The one-dimensional index represented by the subscript.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when size is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the number of <paramref name="subscript"/> elements does not match the specified <paramref name="size"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript is out of the range specified by the dimensions.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when a dimensions is less than 1.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the size Vector has non-integer elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Sum(Infragistics.Math.Vector)">
            <summary>
            Returns the sum of the elements of a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A double y, where y = x[0]+...+x[N].</returns>
            <seealso cref="M:Infragistics.Math.Compute.Product(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sum(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the sum of the elements of a <see cref="T:Infragistics.Math.ComplexVector"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.Complex"/> number y, where y = x[0]+...+x[N].</returns>
            <seealso cref="M:Infragistics.Math.Compute.Product(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Sum(Infragistics.Math.Matrix)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The sum of the elements of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Sum(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The sum of the elements of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Sum(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix with the sum of the elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Sum(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/> along the 
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix with the sum of the elements of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Trace(Infragistics.Math.Matrix)">
            <summary>
            Returns the trace of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>. The trace is the sum of the elements of x
            along the main diagonal.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The trace of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Diagonal(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Trace(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the trace of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>. The trace is the sum of the 
            elements of x along the main diagonal.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The trace of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Diagonal(Infragistics.Math.ComplexMatrix)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.Vector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> identical to <paramref name="x"/> but with the opposite orientation.
            </summary>
            <param name="x">A Vector.</param>
            <returns>
            Returns the equivalent row Vector if x is a column Vector.
            Returns the equivalent column Vector if x is a row Vector.
            </returns>
            <seealso cref="M:Infragistics.Math.Vector.Transpose"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexVector"/> identical to <paramref name="x"/> but with the opposite orientation.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>
            Returns the equivalent row ComplexVector if x is a column ComplexVector.
            Returns the equivalent column ComplexVector if x is a row ComplexVector.
            </returns>
            <seealso cref="M:Infragistics.Math.ComplexVector.Transpose"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.BooleanVector)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanVector"/> identical to <paramref name="x"/> but with the opposite orientation.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>
            Returns the equivalent row BooleanVector if x is a column BooleanVector.
            Returns the equivalent column BooleanVector if x is a row BooleanVector.
            </returns>
            <seealso cref="M:Infragistics.Math.BooleanVector.Transpose"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.Matrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> equal to <paramref name="x"/> with the first and second dimensions switched.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Matrix equal to x with the first and second dimensions switched.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> equal to <paramref name="x"/> with the first and second dimensions switched.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>A ComplexMatrix equal to x with the first and second dimensions switched.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.BooleanMatrix)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.BooleanMatrix"/> equal to <paramref name="x"/> with the first and second dimensions switched.
            </summary>
            <param name="x">A BooleanMatrix.</param>
            <returns>A BooleanMatrix equal to x with the first and second dimensions switched.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Unique(Infragistics.Math.Vector)">
            <summary>
            Returns a new <see cref="T:Infragistics.Math.Vector"/> with the unique elements of <paramref name="x"/>, sorted in ascending order.
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Vector with the unique elements of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Unique(Infragistics.Math.ComplexVector)">
            <summary>
            Returns a new <see cref="T:Infragistics.Math.ComplexVector"/> with the unique elements of <paramref name="x"/>, sorted 
            in ascending order.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>A ComplexVector with the unique elements of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Unique(Infragistics.Math.BooleanVector)">
            <summary>
            Returns a new <see cref="T:Infragistics.Math.BooleanVector"/> with the unique elements of <paramref name="x"/>, sorted 
            in ascending order.
            </summary>
            <param name="x">A BooleanVector.</param>
            <returns>A BooleanVector with the unique elements of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.BooleanVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.VectorProduct(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns the vector product, also known as the dot product or inner product, of two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>The sum of the products of corresponding entries in <paramref name="x1"/> and <paramref name="x2"/>.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the length of x1 does not equal the length of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.VectorProduct(Infragistics.Math.ComplexVector,Infragistics.Math.ComplexVector)">
            <summary>
            Returns the vector product, also known as the dot product or inner product, of two <see cref="T:Infragistics.Math.ComplexVector"/> instances.
            </summary>
            <param name="x1">The first ComplexVector.</param>
            <param name="x2">The second ComplexVector.</param>
            <returns>The sum of the products of corresponding entries in <paramref name="x1"/> and <paramref name="x2"/>.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the length of x1 does not equal the length of x2.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Zeros(System.Int32)">
            <summary>
            Returns a row <see cref="T:Infragistics.Math.Vector"/> with <paramref name="N"/> zeros.
            </summary>
            <param name="N">The length of the Vector.</param>
            <returns>A row zero Vector.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than zero.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Zeros(System.Int32[])">
            <summary>
            Returns a zero <see cref="T:Infragistics.Math.Matrix"/> the specified <paramref name="size"/>.
            </summary>
            <param name="size">The size of the constructed Matrix.</param>
            <returns>A zero Matrix.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when size has elements that are less than or equal to zero.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Correlation(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns the Pearson's correlation coefficient for two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector of observations.</param>
            <param name="x2">The second Vector of observations.</param>
            <returns>The correlation of <paramref name="x1"/> and <paramref name="x2"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Covariance(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Correlation(Infragistics.Math.Matrix)">
            <summary>
            Returns the N x N correlation <see cref="T:Infragistics.Math.Matrix"/> of an N x M Matrix <paramref name="x"/>. 
            </summary>
            <param name="x">A two-dimensional Matrix.</param>
            <returns>The correlation Matrix of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when x is not two-dimensional.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Covariance(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns the sample covariance of two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector of observations.</param>
            <param name="x2">The second Vector of observations.</param>
            <returns>The covariance of <paramref name="x1"/> and <paramref name="x2"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Correlation(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Covariance(Infragistics.Math.Vector,Infragistics.Math.Vector,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the covariance of two <see cref="T:Infragistics.Math.Vector"/> instances.
            </summary>
            <param name="x1">The first Vector of observations.</param>
            <param name="x2">The second Vector of observations.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The covariance of <paramref name="x1"/> and <paramref name="x2"/>.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Covariance(Infragistics.Math.Matrix)">
            <summary>
            Returns the N x N covariance <see cref="T:Infragistics.Math.Matrix"/> of an N x M Matrix <paramref name="x"/>. 
            </summary>
            <param name="x">A two-dimensional Matrix.</param>
            <returns>The covariance Matrix of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Covariance(Infragistics.Math.Matrix,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the N x N covariance <see cref="T:Infragistics.Math.Matrix"/> of an N x M Matrix <paramref name="x"/>. 
            </summary>
            <param name="x">A two-dimensional Matrix.</param>
            <param name="stat">The type of statistic.</param>
            <returns>The covariance Matrix of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when x is not two-dimensional.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Histogram(Infragistics.Math.Vector,System.Int32)">
            <summary>
            Returns a histogram of the data in the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> using <paramref name="N"/>
            evenly-spaced bins.
            </summary>
            <param name="x">A Vector of data.</param>
            <param name="N">The number of evenly-spaced bins.</param>
            <returns>A Vector containing the histogram of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than one.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Vector,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Histogram(Infragistics.Math.Vector,System.Int32,Infragistics.Math.Vector@)">
            <summary>
            Returns a histogram of the data in the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> using <paramref name="N"/>
            evenly-spaced bins.
            </summary>
            <param name="x">A Vector of data.</param>
            <param name="N">The number of evenly-spaced bins.</param>
            <param name="axis">The bin centers that correspond to the values of the histogram.</param>
            <returns>A Vector containing the histogram of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than one.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Vector,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Histogram(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns a histogram of the data in the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> by binning the data using
            a sequence of bin <paramref name="edges"/>.
            </summary>
            <param name="x">A Vector of data.</param>
            <param name="edges">edges[n] and edges[n+1] are the edges of the nth bin.</param>
            <returns>A Vector containing the histogram of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when there are less than two edges.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Histogram(Infragistics.Math.Vector,Infragistics.Math.Vector,Infragistics.Math.Vector@)">
            <summary>
            Returns a histogram of the data in the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> by binning the data using
            a sequence of bin <paramref name="edges"/>.
            </summary>
            <param name="x">A Vector of data.</param>
            <param name="edges">edges[n] and edges[n+1] are the edges of the nth bin.</param>
            <param name="axis">The bin centers that correspond to the values of the histogram.</param>
            <returns>A Vector containing the histogram of x.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when there are less than two edges.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if x is empty.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Bin(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Vector)">
            <summary>
            Returns the mean value of a <see cref="T:Infragistics.Math.Vector"/> of observations.
            </summary>
            <param name="x">A Vector of observations.</param>
            <returns>The mean of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the mean value of a <see cref="T:Infragistics.Math.ComplexVector"/> of observations.
            </summary>
            <param name="x">A ComplexVector of observations.</param>
            <returns>The mean of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Matrix)">
            <summary>
            Returns the mean value of a <see cref="T:Infragistics.Math.Matrix"/> of observations.
            </summary>
            <param name="x">A Matrix of observations.</param>
            <returns>The mean of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the mean value of a <see cref="T:Infragistics.Math.ComplexMatrix"/> of observations.
            </summary>
            <param name="x">A ComplexMatrix of observations.</param>
            <returns>The mean of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns the mean value of a <see cref="T:Infragistics.Math.Matrix"/> of observations along the Nth dimension.
            </summary>
            <param name="x">A Matrix of observations.</param>
            <param name="N">The calculation dimension.</param>
            <returns>The mean of <paramref name="x"/> along the Nth dimension.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns the mean value of a <see cref="T:Infragistics.Math.ComplexMatrix"/> of observations along the Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix of observations.</param>
            <param name="N">The calculation dimension.</param>
            <returns>The mean of <paramref name="x"/> along the Nth dimension.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Median(Infragistics.Math.Vector)">
            <summary>
            Returns the median value of a <see cref="T:Infragistics.Math.Vector"/> of observations.
            </summary>
            <param name="x">A Vector of observations.</param>
            <returns>The median of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Median(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the median value of a <see cref="T:Infragistics.Math.ComplexVector"/> of observations.
            </summary>
            <param name="x">A ComplexVector of observations.</param>
            <returns>The median of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Median(Infragistics.Math.Matrix)">
            <summary>
            Returns the median value of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The median value of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Median(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the median value of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The median value of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Median(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the median of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y equals the median of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Median(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the median of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y equals the median of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Mode(Infragistics.Math.Vector)">
            <summary>
            Returns the mode of the elements of a <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Vector.</param>
            <returns>The element that occurs most frequently in x.</returns>
            <remarks>
            In the event of a tie, the greatest mode is returned.
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Mode(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the mode of the elements of a <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <returns>The element that occurs most frequently in x.</returns>
            <remarks>
            In the event of a tie, the greatest mode is returned.
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Mode(Infragistics.Math.Matrix)">
            <summary>
            Returns the mode of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The mode of x.</returns>
            <remarks>
            In the event of a tie, the greatest mode is returned.
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Mode(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the mode of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The mode of x.</returns>
            <remarks>
            In the event of a tie, the greatest mode is returned.
            </remarks>
        </member>
        <member name="M:Infragistics.Math.Compute.Mode(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the mode of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y equals the mode of x along the Nth dimension.</returns>
            <remarks>
            In the event of a tie, the greatest mode is used.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Mode(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the mode of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y equals the mode of x along the Nth dimension.</returns>
            <remarks>
            In the event of a tie, the greatest mode is used.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.NormalDistribution(System.Double,System.Double,System.Double)">
            <summary>
            Returns the normal distribution of <paramref name="x"/> with mean <paramref name="mu"/> and 
            standard deviation <paramref name="sigma"/>.
            </summary>
            <param name="x">A double.</param>
            <param name="mu">The mean of the distribution.</param>
            <param name="sigma">The standard deviation of the distribution.</param>
            <returns>The normal distrubition x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.NormalDistribution(Infragistics.Math.Vector,System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Vector"/> with the value of the normal distribuion at each element of 
            <paramref name="x"/>. The distribution has mean <paramref name="mu"/> and standard deviation 
            <paramref name="sigma"/>.
            </summary>
            <param name="x">A Vector.</param>
            <param name="mu">The mean of the distribution.</param>
            <param name="sigma">The standard deviation of the distribution.</param>
            <returns>The normal distrubition x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.NormalDistribution(System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.NormalDistribution(Infragistics.Math.Matrix,System.Double,System.Double)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the value of the normal distribuion at each element of 
            <paramref name="x"/>. The distribution has mean <paramref name="mu"/> and standard deviation 
            <paramref name="sigma"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="mu">The mean of the distribution.</param>
            <param name="sigma">The standard deviation of the distribution.</param>
            <returns>The normal distrubition x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.NormalDistribution(System.Double,System.Double,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Vector)">
            <summary>
            Returns the standard deviation of a <see cref="T:Infragistics.Math.Vector"/> of observations.
            </summary>
            <param name="x">A Vector of observations.</param>
            <returns>The standard deviation of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the standard deviation of a <see cref="T:Infragistics.Math.ComplexVector"/> of observations.
            </summary>
            <param name="x">A ComplexVector of observations.</param>
            <returns>The standard deviation of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Vector,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the standard deviation of a <see cref="T:Infragistics.Math.Vector"/> of observations.
            </summary>
            <param name="x">A Vector of observations.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The standard deviation of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Vector,Infragistics.Math.StatisticsType)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexVector,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the standard deviation of a <see cref="T:Infragistics.Math.ComplexVector"/> of observations.
            </summary>
            <param name="x">A ComplexVector of observations.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The standard deviation of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexVector,Infragistics.Math.StatisticsType)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Matrix)">
            <summary>
            Returns the sample standard deviation of all the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The sample standard deviation of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the sample standard deviation of all the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The sample standard deviation of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Matrix,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the standard deviation of all the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The standard deviation of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexMatrix,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the standard deviation of all the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The standard deviation of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the sample standard deviation of <paramref name="x"/>  along the 
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y equals the standard deviation of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the sample standard deviation of <paramref name="x"/>  along the 
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y equals the standard deviation of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Matrix,System.Int32,Infragistics.Math.StatisticsType)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the sample standard deviation of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>A Matrix y, where y equals the standard deviation of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexMatrix,System.Int32,Infragistics.Math.StatisticsType)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the standard deviation of <paramref name="x"/>  along the 
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>A ComplexMatrix y, where y equals the standard deviation of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Vector)">
            <summary>
            Returns the standard error of the sample mean for a <see cref="T:Infragistics.Math.Vector"/> of observations.
            </summary>
            <param name="x">A Vector of observations.</param>
            <returns>The standard error of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the standard error of the sample mean for a <see cref="T:Infragistics.Math.ComplexVector"/> of observations.
            </summary>
            <param name="x">A ComplexVector of observations.</param>
            <returns>The standard error of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Matrix)">
            <summary>
            Returns the standard error of the mean of all the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The standard error of the mean of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the standard error of the mean of all the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The standard error of the mean of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the standard error of the mean of <paramref name="x"/>  along the 
            Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y equals the standard error of the mean of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the standard error of the mean of <paramref name="x"/>  along the 
            Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y equals the standard error of the mean of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Vector)">
            <summary>
            Returns the sample variance of a <see cref="T:Infragistics.Math.Vector"/> of observations.
            </summary>
            <param name="x">A Vector of observations.</param>
            <returns>The variance of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Vector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the sample variance of a <see cref="T:Infragistics.Math.ComplexVector"/> of observations.
            </summary>
            <param name="x">A ComplexVector of observations.</param>
            <returns>The variance of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.Median(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexVector)"/>
            <seealso cref="M:Infragistics.Math.Compute.StandardError(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Vector,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the variance of a <see cref="T:Infragistics.Math.Vector"/> of observations.
            </summary>
            <param name="x">A Vector of observations.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The variance of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.Vector,Infragistics.Math.StatisticsType)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexVector,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the variance of a <see cref="T:Infragistics.Math.ComplexVector"/> of observations.
            </summary>
            <param name="x">A ComplexVector of observations.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The variance of <paramref name="x"/>.</returns>
            <seealso cref="M:Infragistics.Math.Compute.StandardDeviation(Infragistics.Math.ComplexVector,Infragistics.Math.StatisticsType)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Matrix)">
            <summary>
            Returns the sample variance of all the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The sample variance of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexMatrix)">
            <summary>
            Returns the sample variance of all the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <returns>The sample variance of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Matrix,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the variance of all the elements of the <see cref="T:Infragistics.Math.Matrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The variance of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexMatrix,Infragistics.Math.StatisticsType)">
            <summary>
            Returns the variance of all the elements of the <see cref="T:Infragistics.Math.ComplexMatrix"/> <paramref name="x"/>.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>The variance of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Matrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the sample variance of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A Matrix y, where y equals the variance of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexMatrix,System.Int32)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the sample variance of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <returns>A ComplexMatrix y, where y equals the variance of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.Matrix,System.Int32,Infragistics.Math.StatisticsType)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.Matrix"/> with the variance of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A Matrix.</param>
            <param name="N">The calculation dimension.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>A Matrix y, where y equals the variance of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.Variance(Infragistics.Math.ComplexMatrix,System.Int32,Infragistics.Math.StatisticsType)">
            <summary>
            Returns a <see cref="T:Infragistics.Math.ComplexMatrix"/> with the variance of <paramref name="x"/>  along the Nth dimension.
            </summary>
            <param name="x">A ComplexMatrix.</param>
            <param name="N">The calculation dimension.</param>
            <param name="stat">The type of statistic desired.</param>
            <returns>A ComplexMatrix y, where y equals the variance of x along the Nth dimension.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.AverageDeviation(Infragistics.Math.Vector)">
            <summary>
            Returns the average absolute deviation from the mean of a <see cref="T:Infragistics.Math.Vector"/> of data.
            </summary>
            <param name="x">A Vector of data.</param>
            <returns>The average deviation of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.AverageDeviation(Infragistics.Math.ComplexVector)">
            <summary>
            Returns the average absolute deviation from the mean of a <see cref="T:Infragistics.Math.ComplexVector"/> of data.
            </summary>
            <param name="x">A ComplexVector of data.</param>
            <returns>The average deviation of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.AverageIf(Infragistics.Math.Vector,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the average value of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> where the corresponding 
            <see cref="T:Infragistics.Math.BooleanVector"/> is True.
            </summary>
            <param name="x">A Vector.</param>
            <param name="comparison">A BooleanVector with the same length and orientation as x.</param>
            <returns>The average value of the elements of x where <paramref name="comparison"/> is true.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different length than x.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different orientation than x.
            </exception>
            <remarks>
            The BooleanVector comparison can be easily constructed using the compare operators on Vector. The following
            notation is convenient:
            
            Vector x1 = Compute.Line(-1, 1, 1000);
            double sumif = Compute.AverageIf(x, x &gt; 0);
            </remarks>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.AverageIf(Infragistics.Math.ComplexVector,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the average value of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/> where the corresponding 
            <see cref="T:Infragistics.Math.BooleanVector"/> is True.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="comparison">A BooleanVector with the same length and orientation as x.</param>
            <returns>The average value of the elements of x where <paramref name="comparison"/> is true.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different length than x.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different orientation than x.
            </exception>
            <remarks>
            The BooleanVector comparison can be easily constructed using the compare operators on ComplexVector. The 
            following notation is convenient:
            
            Complex i = Constant.I;
            ComplexVector x1 = Compute.Line(-1, 1, 1000) + i*Compute.Line(1, -1, 1000);
            Complex sum = Compute.AverageIf(x, x &gt; 0);
            </remarks>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.AverageIf(Infragistics.Math.Vector,Infragistics.Math.ComparisonType,System.Double)">
            <summary>
            Returns the average value of the elements of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> which satisfy the condition 
            specified by the <see cref="T:Infragistics.Math.ComparisonType"/>.
            </summary>
            <param name="x">A Vector.</param>
            <param name="op">A ComparisonType.</param>
            <param name="c">A double.</param>
            <returns>The conditional average of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.AverageIf(Infragistics.Math.ComplexVector,Infragistics.Math.ComparisonType,Infragistics.Math.Complex)">
            <summary>
            Returns the average value of the elements of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/> which satisfy the 
            condition specified by the <see cref="T:Infragistics.Math.ComparisonType"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="op">A ComparisonType.</param>
            <param name="c">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The conditional average of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Mean(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.TryAverageIf(Infragistics.Math.Vector,Infragistics.Math.BooleanVector,System.Double@,System.Exception@)">
            <summary>
            Returns the average value of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> where the corresponding 
            <see cref="T:Infragistics.Math.BooleanVector"/> is True as the result.
            </summary>
            <param name="x">A Vector.</param>
            <param name="comparison">A BooleanVector with the same length and orientation as x.</param>
            <param name="result">The average value of the elements of x where <paramref name="comparison"/> is true.</param>
            <param name="exception">The excepton if one should be thrown; false otherwise.</param>
            <returns>True if the computation is successful; false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.TryAverageIf(Infragistics.Math.ComplexVector,Infragistics.Math.BooleanVector,Infragistics.Math.Complex@,System.Exception@)">
            <summary>
            Returns the average value of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/> where the corresponding 
            <see cref="T:Infragistics.Math.BooleanVector"/> is True as the result.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="comparison">A BooleanVector with the same length and orientation as x.</param>
            <param name="result">The average value of the elements of x where <paramref name="comparison"/> is true.</param>
            <param name="exception">The excepton if one should be thrown; false otherwise.</param>
            <returns>True if the computation is successful; false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.TryAverageIf(Infragistics.Math.Vector,Infragistics.Math.ComparisonType,System.Double,System.Double@,System.Exception@)">
            <summary>
            Returns the average value of the elements of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> which satisfy the condition 
            specified by the <see cref="T:Infragistics.Math.ComparisonType"/> as the <paramref name="result"/>.
            </summary>
            <param name="x">A Vector.</param>
            <param name="op">A ComparisonType.</param>
            <param name="c">A double.</param>
            <param name="result">The conditional average of x.</param>
            <param name="exception">The exception, if one should be thrown; Null otherwise.</param>
            <returns>True if the computation is successful; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.TryAverageIf(Infragistics.Math.ComplexVector,Infragistics.Math.ComparisonType,Infragistics.Math.Complex,Infragistics.Math.Complex@,System.Exception@)">
            <summary>
            Returns the average value of the elements of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/> which satisfy the condition 
            specified by the <see cref="T:Infragistics.Math.ComparisonType"/> as the <paramref name="result"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="op">A ComparisonType.</param>
            <param name="c">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <param name="result">The conditional average of x.</param>
            <param name="exception">The exception, if one should be thrown; Null otherwise.</param>
            <returns>True if the computation is successful; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Standardize(System.Double,System.Double,System.Double)">
            <summary>
            Returns the z-score of <paramref name="x"/> with respect a distribution of mean <paramref name="mu"/> and 
            standard deviation <paramref name="sigma"/>.
            </summary>
            <param name="x">A double.</param>
            <param name="mu">The mean of a distribution.</param>
            <param name="sigma">The standard deviation of a distribution.</param>
            <returns>The z-score of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.Standardize(Infragistics.Math.Vector)">
            <summary>
            Returns the z-score of the elements of <paramref name="x"/> with respect to their mean and standard deviation.
            </summary>
            <param name="x">A Vector of data.</param>
            <returns>The z-score of the elements of x.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.SumIf(Infragistics.Math.Vector,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> where the corresponding 
            <see cref="T:Infragistics.Math.BooleanVector"/> is True.
            </summary>
            <param name="x">A Vector.</param>
            <param name="comparison">A BooleanVector with the same length and orientation as x.</param>
            <returns>The sum of the elements of x where <paramref name="comparison"/> is true.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different length than x.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different orientation than x.
            </exception>
            <remarks>
            The BooleanVector comparison can be easily constructed using the compare operators on Vector. The following
            notation is convenient:
            
            Vector x1 = Compute.Line(-1, 1, 1000);
            double sumif = Compute.SumIf(x, x &gt; 0);
            </remarks>
            <seealso cref="M:Infragistics.Math.Compute.Sum(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SumIf(Infragistics.Math.ComplexVector,Infragistics.Math.BooleanVector)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/> where the corresponding 
            <see cref="T:Infragistics.Math.BooleanVector"/> is True.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="comparison">A BooleanVector with the same length and orientation as x.</param>
            <returns>The sum of the elements of x where <paramref name="comparison"/> is true.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different length than x.
            </exception>
            <exception cref="T:System.ArithmeticException">
            Occurs if the comparison has a different orientation than x.
            </exception>
            <remarks>
            The BooleanVector comparison can be easily constructed using the compare operators on ComplexVector. The 
            following notation is convenient:
            
            Complex i = Constant.I;
            ComplexVector x1 = Compute.Line(-1, 1, 1000) + i*Compute.Line(1, -1, 1000);
            Complex sum = Compute.SumIf(x, x &gt; 0);
            </remarks>
            <seealso cref="M:Infragistics.Math.Compute.Sum(Infragistics.Math.ComplexVector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SumIf(Infragistics.Math.Vector,Infragistics.Math.ComparisonType,System.Double)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.Vector"/> <paramref name="x"/> that satisfy the condition 
            specified by the <see cref="T:Infragistics.Math.ComparisonType"/>.
            </summary>
            <param name="x">A Vector.</param>
            <param name="op">A ComparisonType.</param>
            <param name="c">A double.</param>
            <returns>The conditional sum of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sum(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SumIf(Infragistics.Math.ComplexVector,Infragistics.Math.ComparisonType,Infragistics.Math.Complex)">
            <summary>
            Returns the sum of the elements of the <see cref="T:Infragistics.Math.ComplexVector"/> <paramref name="x"/> that satisfy the 
            condition specified by the <see cref="T:Infragistics.Math.ComparisonType"/>.
            </summary>
            <param name="x">A ComplexVector.</param>
            <param name="op">A ComparisonType.</param>
            <param name="c">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The conditional sum of x.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sum(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Compute.SumProduct(Infragistics.Math.Vector[])">
            <summary>
            Returns the sum of the products of the corresponding elements of each <see cref="T:Infragistics.Math.Vector"/> 
            in <paramref name="x"/>.
            </summary>
            <param name="x">An array of Vectors with the same dimensions.</param>
            <returns>A double y, where y = (x[0][0]*...*x[M][0]) + ... + (x[0][N]*...*x[M][N]).</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if the dimensions of the Vectors in x do not have the same dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.TrySumProduct(System.Double@,System.Exception@,Infragistics.Math.Vector[])">
            <summary>
            Returns the sum of the products of the corresponding elements of each <see cref="T:Infragistics.Math.Vector"/> 
            in <paramref name="x"/> as the result.
            </summary>
            <param name="exception">The exception, if one is thrown; Null otherwise.</param>
            <param name="result">A double y, where y = (x[0][0]*...*x[M][0]) + ... + (x[0][N]*...*x[M][N]).</param>
            <param name="x">An array of Vectors with the same dimensions.</param>
            <returns>True if the result is computed; false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Compute.SumProduct(Infragistics.Math.ComplexVector[])">
            <summary>
            Returns the sum of the products of the corresponding elements of each <see cref="T:Infragistics.Math.ComplexVector"/> 
            in <paramref name="x"/>.
            </summary>
            <param name="x">An array of ComplexVectors with the same dimensions.</param>
            <returns>A <see cref="T:Infragistics.Math.Complex"/> number y, where y = (x[0][0]*...*x[M][0]) + ... + (x[0][N]*...*x[M][N]).</returns>
            <exception cref="T:System.ArgumentException">
            Occurs if the dimensions of the ComplexVectors in x do not have the same dimensions.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Compute.TrySumProduct(Infragistics.Math.Complex@,System.Exception@,Infragistics.Math.ComplexVector[])">
            <summary>
            Returns the sum of the products of the corresponding elements of each <see cref="T:Infragistics.Math.ComplexVector"/> 
            in <paramref name="x"/> as the result.
            </summary>
            <param name="exception">The exception, if one is thrown; Null otherwise.</param>
            <param name="result">A <see cref="T:Infragistics.Math.Complex"/> number y, where y = (x[0][0]*...*x[M][0]) + ... + (x[0][N]*...*x[M][N]).</param>
            <param name="x">An array of ComplexVectors with the same dimensions.</param>
            <returns>True if the result is computed; false otherwise.</returns>
        </member>
        <member name="T:Infragistics.Math.Constant">
            <summary>
            Constant contains several standard mathematical constants.
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.Alpha">
            <summary>
            Represents Feigenbaum's constant alpha. 
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.Delta">
            <summary>
            Represents Feigenbaum's constant delta. 
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.E">
            <summary>
            Represents Euler's number e. 
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.Epsilon">
            <summary>
            Represents a vanishingly small number epsilon. 
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.Inf">
            <summary>
            Represents infinity.
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.NaN">
            <summary>
            Represents an undefined number. NaN means "not a number".
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.Phi">
            <summary>
            Represents the golden ratio phi. 
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.Pi">
            <summary>
            Respresents the irrational number pi.
            </summary>
        </member>
        <member name="F:Infragistics.Math.Constant.I">
            <summary>
            Represents the imaginary number i.
            </summary>
        </member>
        <member name="T:Infragistics.Math.ComparisonType">
            <summary>
            Specifies one of the six comparison operators.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComparisonType.GreaterThan">
            <summary>
            Specifies a comparison using the GreaterThan operator.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComparisonType.GreaterThanOrEqualTo">
            <summary>
            Specifies a comparison using the GreaterThanOrEqual operator.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComparisonType.LessThan">
            <summary>
            Specifies a comparison using the LessThan operator.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComparisonType.LessThanOrEqualTo">
            <summary>
            Specifies a comparison using the LessThanOrEqual operator.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComparisonType.EqualTo">
            <summary>
            Specifies a comparison using the Equality operator.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ComparisonType.NotEqualTo">
            <summary>
            Specifies a comparison using the InEquality operator.
            </summary>
        </member>
        <member name="T:Infragistics.Math.ConvolutionType">
            <summary>
            Specifies the type of convolution to operation to perform.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ConvolutionType.Full">
            <summary>
            For inputs with length N1 and N2, returns an N1 + N2 - 1 length <see cref="T:Infragistics.Math.Vector"/> representing the 
            full convolution operation.
            </summary>
        </member>
        <member name="F:Infragistics.Math.ConvolutionType.Center">
            <summary>
            For inputs with length N1 and N2, returns a max(N1,N2) length <see cref="T:Infragistics.Math.Vector"/> representing the 
            center of the convolution operation.
            </summary>
        </member>
        <member name="T:Infragistics.Math.StatisticsType">
            <summary>
            Specifies the type of statistic to calculate for a given dataset.
            </summary>
        </member>
        <member name="F:Infragistics.Math.StatisticsType.Population">
            <summary>
            Specifies the population statistic, which treats the dataset as a complete population of data.
            </summary>
        </member>
        <member name="F:Infragistics.Math.StatisticsType.Sample">
            <summary>
            Specifies the sample statistic, which treats the dataset as a sample of a larger population.
            </summary>
        </member>
        <member name="T:Infragistics.Math.VectorType">
            <summary>
            Specifies the orientation of a <see cref="T:Infragistics.Math.Vector"/> instance.
            </summary>
        </member>
        <member name="F:Infragistics.Math.VectorType.Row">
            <summary>
            Specifies a row Vector.
            </summary>
        </member>
        <member name="F:Infragistics.Math.VectorType.Column">
            <summary>
            Specifies a column Vector.
            </summary>
        </member>
        <member name="T:Infragistics.Math.Matrix">
            <summary>
            A Matrix is a list of doubles with an additional dimensionality property that specifies its spatial orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Math.Matrix.Empty">
            <summary>
            Returns the empty <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Matrix.#ctor">
            <summary>
            Initializes an empty <see cref="T:Infragistics.Math.Matrix"/> instance.
            </summary>
            <seealso cref="M:Infragistics.Math.MatrixBase.IsEmpty"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.#ctor(System.Int32)">
            <summary>
            Initializes a one-dimensional <see cref="T:Infragistics.Math.Matrix"/> of a specified <paramref name="length"/>. 
            </summary>
            <param name="length">The length of the constructed Matrix.</param>
        </member>
        <member name="M:Infragistics.Math.Matrix.#ctor(System.Int32[])">
            <summary>
            Initializes a zero <see cref="T:Infragistics.Math.Matrix"/> with the specified <paramref name="dimensions"/>. 
            </summary>
            <param name="dimensions">The dimensions of the constructed Matrix.</param>
        </member>
        <member name="M:Infragistics.Math.Matrix.#ctor(System.Double,System.Int32[])">
            <summary>
            Initializes a constant <see cref="T:Infragistics.Math.Matrix"/> with the specified <paramref name="dimensions"/>. 
            </summary>
            <param name="value">The constant value assigned to each element of the Matrix.</param>
            <param name="dimensions">The dimensions of the constructed Matrix.</param>
        </member>
        <member name="M:Infragistics.Math.Matrix.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a one-dimensional <see cref="T:Infragistics.Math.Matrix"/> of the specified <paramref name="length"/> and the specified <paramref name="value"/>.
            </summary>
            <param name="value">The value assigned to each element of the constructed Matrix.</param>
            <param name="length">The length of the constructed Matrix.</param>
        </member>
        <member name="M:Infragistics.Math.Matrix.#ctor(System.Collections.Generic.IList{System.Double},System.Int32[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.Matrix"/> with the specified <paramref name="elements"/> and <paramref name="dimensions"/>.
            </summary>
            <param name="elements">The elements of the constructed Matrix.</param>
            <param name="dimensions">The dimensions of the constructed Matrix.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the dimensions specify a size that is inconsistent with the length of the elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.#ctor(System.Array)">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.Matrix"/> by copying the elements and dimensions of a multi-dimensional double array.
            </summary>
            <param name="x">A multi-dimensional double array.</param>
            <exception cref="T:System.ArgumentException">
            Occurs if x is not a double array.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.Matrix"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.Matrix.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.Matrix"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.Matrix.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.Matrix"/> with <paramref name="x"/> for equality.
            </summary>
            <param name="x">An object.</param>
            <returns>Returns True if the Matrix is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.GetHashCode">
            <summary>
            Returns hash code for the <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Matrix.System#Collections#Generic#IEnumerable{System#Double}#GetEnumerator">
            <summary>
            Returns an double enumerator for the <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Matrix.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Matrix.System#ICloneable#Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Addition(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Adds two <see cref="T:Infragistics.Math.Matrix"/> instances pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Addition(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Matrix"/> and a double pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Addition(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Adds a double and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Addition(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A <see cref="T:Infragistics.Math.ComplexMatrix"/> y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Addition(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A <see cref="T:Infragistics.Math.ComplexMatrix"/> y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Subtraction(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Subtracts two <see cref="T:Infragistics.Math.Matrix"/> instances pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Subtraction(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Matrix"/> and a double pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Subtraction(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Subtracts a double and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Subtraction(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Subtraction(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Multiply(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Multiplies two <see cref="T:Infragistics.Math.Matrix"/> instances pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Multiply(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Matrix"/> and a double pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Multiply(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Multiplies a double and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Multiply(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Multiply(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Division(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Divides two <see cref="T:Infragistics.Math.Matrix"/> instances pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Division(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Matrix"/> and a double pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Division(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Divides a double and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Division(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Division(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Modulus(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Returns the modulus of two <see cref="T:Infragistics.Math.Matrix"/> instances pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] % x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Modulus(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Returns the modulus of a <see cref="T:Infragistics.Math.Matrix"/> and a double pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1[i] % x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Modulus(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Returns the modulus of a double and a <see cref="T:Infragistics.Math.Matrix"/> pointwise.
            </summary>
            <returns>A Matrix y, where y[i] = x1 % x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Equality(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.Matrix"/> instances have the same dimensions and element values.
            </summary>
            <param name="x1">The first Matrix.</param>
            <param name="x2">The second Matrix.</param>
            <returns>Returns True if the two Matrix instances are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Equality(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Matrix"/> and a double.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Equality(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise equality operator for a double and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Equality(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Equality(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Matrix.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Inequality(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.Matrix"/> instances have different dimensions or element values.
            </summary>
            <param name="x1">The first Matrix.</param>
            <param name="x2">The second Matrix.</param>
            <returns>Returns True if the two Matrix instances are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Inequality(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Matrix"/> and a double.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A double.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Inequality(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise inequality operator for a double and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Matrix.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Inequality(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Inequality(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Matrix.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThan(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Matrix"/> instances using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">The first Matrix.</param>
            <param name="x2">The second Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThan(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThan(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThan(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a double using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThan(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Matrix"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThan(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThan(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThanOrEqual(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Matrix"/> instances using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first Matrix.</param>
            <param name="x2">The second Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThanOrEqual(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThanOrEqual(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThanOrEqual(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a double using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThanOrEqual(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Matrix"/> using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThanOrEqual(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_GreaterThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThan(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Matrix"/> instances using the LessThan operator pointwise.
            </summary>
            <param name="x1">The first Matrix.</param>
            <param name="x2">The second Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThan(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThan(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThan(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a double using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThan(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Matrix"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThan(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThan(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThanOrEqual(Infragistics.Math.Matrix,Infragistics.Math.Matrix)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Matrix"/> instances using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first Matrix.</param>
            <param name="x2">The second Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThanOrEqual(Infragistics.Math.Matrix,Infragistics.Math.ComplexMatrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.ComplexMatrix"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A ComplexMatrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThanOrEqual(Infragistics.Math.ComplexMatrix,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexMatrix"/> and a <see cref="T:Infragistics.Math.Matrix"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexMatrix.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThanOrEqual(Infragistics.Math.Matrix,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a double using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThanOrEqual(System.Double,Infragistics.Math.Matrix)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Matrix"/> using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThanOrEqual(Infragistics.Math.Matrix,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Matrix"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Matrix.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_LessThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.Matrix)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Matrix"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Matrix.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanMatrix"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Explicit(Infragistics.Math.Vector)~Infragistics.Math.Matrix">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Vector"/> to a <see cref="T:Infragistics.Math.Matrix"/>. 
            </summary>
            <param name="x">A Vector.</param>
            <returns>A Matrix y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Explicit(Infragistics.Math.Matrix)~Infragistics.Math.Vector">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Matrix"/> to a <see cref="T:Infragistics.Math.Vector"/>. 
            </summary>
            <param name="x">A Matrix.</param>
            <returns>A Vector y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Implicit(System.Double)~Infragistics.Math.Matrix">
            <summary>
            Casts a double to a unitary <see cref="T:Infragistics.Math.Matrix"/>. 
            </summary>
            <param name="x">A double.</param>
            <returns>A unitary Vector y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Implicit(System.Double[])~Infragistics.Math.Matrix">
            <summary>
            Casts a double array to a row <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x">A double array.</param>
            <returns>A row Matrix y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Explicit(System.Int32[])~Infragistics.Math.Matrix">
            <summary>
            Casts an int array to a row <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x">An int array.</param>
            <returns>A row Matrix y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Explicit(System.Int16[])~Infragistics.Math.Matrix">
            <summary>
            Casts a short array to a row <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x">A short array.</param>
            <returns>A row Matrix y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Explicit(System.Int64[])~Infragistics.Math.Matrix">
            <summary>
            Casts a long array to a row <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x">A uint array.</param>
            <returns>A row Matrix y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Explicit(System.Single[])~Infragistics.Math.Matrix">
            <summary>
            Casts a float array to a row <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x">A float array.</param>
            <returns>A row Matrix y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.op_Explicit(System.Decimal[])~Infragistics.Math.Matrix">
            <summary>
            Casts a decimal array to a row <see cref="T:Infragistics.Math.Matrix"/>.
            </summary>
            <param name="x">A decimal array.</param>
            <returns>A row Matrix y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.Abs">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Abs(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Acos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Acos(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Add(Infragistics.Math.Matrix)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] + x[i].
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.Add(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] + x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Matrix.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.Arg">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Arg(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Asin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Asin(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Atan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Atan(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Ceiling">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Ceiling(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.CompareTo(Infragistics.Math.Matrix)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.CompareTo(Infragistics.Math.ComplexMatrix)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexMatrix"/>.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.CompareTo(System.Double)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Matrix.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.CompareTo(Infragistics.Math.Complex)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified Matrix.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.Cos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Cos(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Cosh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Cosh(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Divide(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] / x[i].
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.Divide(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] / x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Matrix.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.Exp">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Exp(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Floor">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Floor(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Log">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Log(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Log(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Log(y[i],B).
            </summary>
            <param name="B">The base of the logarithm.</param>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Matrix,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Log2">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Log2(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Log10">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Log10(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Mod(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] % x[i].
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.Mod(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] % x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Matrix.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.Multiply(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] * x[i].
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.Multiply(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] * x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Matrix.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.Pow(Infragistics.Math.Matrix)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Pow(y[i],x[i]).
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Matrix,Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Pow(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Pow(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Matrix,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Round">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Round(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Sign">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Sign(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Sin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Sin(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Sinh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Sinh(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Sqrt">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Sqrt(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Subtract(Infragistics.Math.Matrix)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] - x[i].
            </summary>
            <param name="x">A Matrix.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Matrix and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.Subtract(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with y[i] - x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Matrix.</returns>
        </member>
        <member name="M:Infragistics.Math.Matrix.Tan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Tan(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Tanh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i] with Tanh(y[i]).
            </summary>
            <returns>The modified Matrix.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Matrix)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.Bin(System.Int32)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/> by replacing its element with a bin number.
            </summary>
            <param name="N">The number of evenly-spaced bins.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than one.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.Bin(Infragistics.Math.Vector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Matrix"/> by replacing each element with a bin number. 
            </summary>
            <param name="edges">edges[i] and edges[i+1] are the edges of the ith bin.</param>
            <returns>The modified Matrix.</returns>
            <remarks>
            If an element of the Matrix is not in any bin, it is replaced by Constant.NaN.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when there are less than two bin <paramref name="edges"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the bin edges are not in increasing order.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Matrix.Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.Matrix"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Matrix.CumProduct(System.Int32)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i1,..,iN,..,iM] with y[i1,..,0,..,iM]*...*y[i1,..,iN,..,iM].
            </summary>
            <param name="N">The calculation dimension.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.Matrix,System.Int32)"/>
        </member>
        <member name="M:Infragistics.Math.Matrix.CumSum(System.Int32)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Matrix"/>, y, by replacing each element y[i1,..,iN,..,iM] with y[i1,..,0,..,iM]+...+y[i1,..,iN,..,iM].
            </summary>
            <param name="N">The calculation dimension.</param>
            <returns>The modified Matrix.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when x is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when <paramref name="N"/> is less than 1.
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Matrix,System.Int32)"/>
        </member>
        <member name="P:Infragistics.Math.Matrix.Item(System.Int32[])">
            <summary>
            An indexer for the <see cref="T:Infragistics.Math.Matrix"/>. The Matrix can be indexed one-dimensionally or multi-dimensionally.
            </summary>
            <param name="subscript">A sequence of indices that correspond to the dimensions of the Matrix.</param>
            <returns>The element specified by the subscript.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the Matrix is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="subscript"/> is non-unitary and has a different number of dimensions than the Matrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index is out of the bounds of the Matrix.
            </exception>
        </member>
        <member name="P:Infragistics.Math.Matrix.Item(Infragistics.Math.Vector[])">
            <summary>
            An indexer for the <see cref="T:Infragistics.Math.Matrix"/> that takes a series of <see cref="T:Infragistics.Math.Vector"/> subscripts. The Matrix can 
            be indexed one-dimensionally or multi-dimensionally.
            </summary>
            <param name="subscript">An array of index Vectors.</param>
            <returns>A Matrix containing the elements specified by the <paramref name="subscript"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the Matrix is empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the <paramref name="subscript"/> is non-unitary and has a different number of dimensions than the Matrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index is out of the bounds of the Matrix.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when a subscript index has a non-integer value.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Occurs when the set value does not align with the elements specified by the subscript.
            </exception>
        </member>
        <member name="T:Infragistics.Math.MathResourceCustomizer">
            <summary>
            Class used to provide the ability to customize resource strings.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Infragistics.Math.MathResourceCustomizer.GetCustomizedString(System.String)">
            <summary>
            Gets the customized string identified by the specified string resource name.
            </summary>
            <param name="name">Name of the string resource that was customized.</param>
            <returns>The customized string or null if the resource wasn't customized.</returns>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.ResetAllCustomizedStrings"/>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
        </member>
        <member name="M:Infragistics.Math.MathResourceCustomizer.ResetAllCustomizedStrings">
            <summary>
            Clears all strings customized by calls to <see cref="M:Infragistics.Math.MathResourceCustomizer.SetCustomizedString(System.String,System.String)"/> method.
            </summary>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.ResetCustomizedString(System.String)"/>
        </member>
        <member name="M:Infragistics.Math.MathResourceCustomizer.ResetCustomizedString(System.String)">
            <summary>
            Resets a customized string identified by the specified string resource name so that it will load from the resource file.
            </summary>
            <param name="name">Name of the string resource to customize.</param>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
        </member>
        <member name="M:Infragistics.Math.MathResourceCustomizer.SetCustomizedString(System.String,System.String)">
            <summary>
            Sets a customized string identified by the specified string resource name.
            </summary>
            <param name="name">Name of the string resource to customize.</param>
            <param name="customizedText">The customized string. If null this has the same effect as calling <see cref="M:Infragistics.Math.MathResourceCustomizer.ResetCustomizedString(System.String)"/>.</param>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.ResetAllCustomizedStrings"/>
            <seealso cref="M:Infragistics.Math.MathResourceCustomizer.ResetCustomizedString(System.String)"/>
        </member>
        <member name="T:Infragistics.Math.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Math.MathResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Math.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Math.MathResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Math.Resources.GetString(System.String,System.Object[])">
            <summary>
            Returns the resource string using the specified name and default culture.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <returns>The resource string using the specified resource name and default culture.</returns>
        </member>
        <member name="M:Infragistics.Math.Resources.GetString(System.String)">
            <summary>
            Returns the resource string using the specified resource name and default culture. The string is then formatted using the arguments specified.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <returns>The resource string using the specified resource name and default culture.</returns>
        </member>
        <member name="M:Infragistics.Math.Resources.GetObject(System.String)">
            <summary>
            Returns the resource object using the specified name.
            </summary>
            <param name="name">Name of the resource item.</param>
            <returns>An object containing the specified resource.</returns>
        </member>
        <member name="P:Infragistics.Math.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Math.MathResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Math.MathResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Math.Utilities.GetArrayDimensions(System.Array)">
            <summary>
            Returns the dimensions of an array as an integer array.
            </summary>
            <param name="x">An array.</param>
            <returns>The dimensions of <paramref name="x"/>.</returns>
        </member>
        <member name="M:Infragistics.Math.Utilities.Product(System.Int32[])">
            <summary>
            Returns the product of the elements of an integer array.
            </summary>
            <param name="x">An integer array.</param>
            <returns>The product of an integer array.</returns>
        </member>
        <member name="T:Infragistics.Math.Vector">
            <summary>
            A Vector is a list of doubles with an additional dimensionality property that specifies its orientation.
            </summary>
        </member>
        <member name="F:Infragistics.Math.Vector.Empty">
            <summary>
            Returns the empty <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Vector.#ctor">
            <summary>
            Initializes an empty <see cref="T:Infragistics.Math.Vector"/> instance.
            </summary>
            <seealso cref="M:Infragistics.Math.MatrixBase.IsEmpty"/>
        </member>
        <member name="M:Infragistics.Math.Vector.#ctor(System.Int32)">
            <summary>
            Initializes a row zero <see cref="T:Infragistics.Math.Vector"/> of a specified <paramref name="length"/>. 
            </summary>
            <param name="length">The length of the constructed Vector.</param>
        </member>
        <member name="M:Infragistics.Math.Vector.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a row <see cref="T:Infragistics.Math.Vector"/> of the specified <paramref name="length"/> and the specified <paramref name="value"/>.
            </summary>
            <param name="value">The value assigned to each element of the constructed Vector.</param>
            <param name="length">The length of the constructed Vector.</param>
        </member>
        <member name="M:Infragistics.Math.Vector.#ctor(System.Collections.Generic.IList{System.Double})">
            <summary>
            Initializes a row <see cref="T:Infragistics.Math.Vector"/> with the specified <paramref name="elements"/>.
            </summary>
            <param name="elements">The elements of the constructed Vector.</param>
        </member>
        <member name="M:Infragistics.Math.Vector.#ctor(System.Collections.Generic.IList{System.Double},System.Int32[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.Vector"/> with the specified <paramref name="elements"/> and <paramref name="dimensions"/>.
            </summary>
            <param name="elements">The elements of the constructed Vector.</param>
            <param name="dimensions">The dimensions of the constructed Vector.</param>
            <exception cref="T:System.ArgumentException">
            Occurs when the dimensions specify a size that is inconsistent with the length of the elements.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.#ctor(Infragistics.Math.VectorType,System.Double[])">
            <summary>
            Initializes a <see cref="T:Infragistics.Math.Vector"/> with the specified elements <paramref name="x"/>.
            </summary>
            <param name="type">An enum that specifies the orientation of the Vector.</param>
            <param name="x">A double array of elements.</param>
        </member>
        <member name="M:Infragistics.Math.Vector.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.Vector"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.Vector.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies the base <see cref="T:Infragistics.Math.Vector"/> to an <paramref name="array"/> starting at a 
            particular <paramref name="index"/>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">An index into the destination array where the copying begins.</param>
        </member>
        <member name="M:Infragistics.Math.Vector.Equals(System.Object)">
            <summary>
            Compares the <see cref="T:Infragistics.Math.Vector"/> with <paramref name="x"/> for equality.
            </summary>
            <param name="x">An object.</param>
            <returns>Returns True if the Vector is equal to x; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.GetHashCode">
            <summary>
            Returns hash code for the <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <returns>A hash code.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.ToString">
            <summary>
            Returns the string representation of a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Vector.System#Collections#Generic#IEnumerable{System#Double}#GetEnumerator">
            <summary>
            Returns an double enumerator for the <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Vector.GetEnumerator">
            <summary>
            Returns an enumerator for the <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Vector.System#ICloneable#Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Addition(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Adds two <see cref="T:Infragistics.Math.Vector"/> instances pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Addition(Infragistics.Math.Vector,System.Double)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Vector"/> and a double pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Addition(System.Double,Infragistics.Math.Vector)">
            <summary>
            Adds a double and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Addition(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A <see cref="T:Infragistics.Math.ComplexVector"/> y, where y[i] = x1[i] + x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Addition(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Adds a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A <see cref="T:Infragistics.Math.ComplexVector"/> y, where y[i] = x1 + x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Subtraction(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Subtracts two <see cref="T:Infragistics.Math.Vector"/> instances pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Subtraction(Infragistics.Math.Vector,System.Double)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Vector"/> and a double pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Subtraction(System.Double,Infragistics.Math.Vector)">
            <summary>
            Subtracts a double and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Subtraction(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] - x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Subtraction(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Subtracts a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 - x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Multiply(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Multiplies two <see cref="T:Infragistics.Math.Vector"/> instances pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Multiply(Infragistics.Math.Vector,System.Double)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Vector"/> and a double pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Multiply(System.Double,Infragistics.Math.Vector)">
            <summary>
            Multiplies a double and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Multiply(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] * x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Multiply(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Multiplies a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 * x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Division(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Divides two <see cref="T:Infragistics.Math.Vector"/> instances pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Division(Infragistics.Math.Vector,System.Double)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Vector"/> and a double pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Division(System.Double,Infragistics.Math.Vector)">
            <summary>
            Multiplies a double and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Division(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] / x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Division(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Divides a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 / x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Modulus(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Returns the modulus of two <see cref="T:Infragistics.Math.Vector"/> instances pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] % x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Modulus(Infragistics.Math.Vector,System.Double)">
            <summary>
            Returns the modulus of a <see cref="T:Infragistics.Math.Vector"/> and a double pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1[i] % x2.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Modulus(System.Double,Infragistics.Math.Vector)">
            <summary>
            Returns the modulus of a <see cref="T:Infragistics.Math.Vector"/> pointwise.
            </summary>
            <returns>A Vector y, where y[i] = x1 % x2[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Equality(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.Vector"/> instances have the same dimensions and element values.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>Returns True if the two Vector instances are equal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Equality(Infragistics.Math.Vector,System.Double)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Vector"/> and a double.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A double.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Equality(System.Double,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise equality operator for a double and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Vector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Equality(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Equality(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise equality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Vector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = Equals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Inequality(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Determines whether two <see cref="T:Infragistics.Math.Vector"/> instances have different dimensions and element values.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>Returns True if the two Vector instances are unequal; False otherwise.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Inequality(Infragistics.Math.Vector,System.Double)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Vector"/> and a double.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A double.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Inequality(System.Double,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise inequality operator for a double and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Vector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Inequality(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Inequality(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Returns the pointwise inequality operator for a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Vector.</param>
            <returns>A new <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = NotEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThan(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Vector"/> instances using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThan(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThan(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThan(Infragistics.Math.Vector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a double using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThan(System.Double,Infragistics.Math.Vector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Vector"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThan(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThan(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> using the GreaterThan operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThanOrEqual(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Vector"/> instances using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThanOrEqual(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThanOrEqual(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThanOrEqual(Infragistics.Math.Vector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a double using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThanOrEqual(System.Double,Infragistics.Math.Vector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Vector"/> using the GreaterThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThanOrEqual(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_GreaterThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> using the GreaterThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = GreaterThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThan(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Vector"/> instances using the LessThan operator pointwise.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThan(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThan(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThan(Infragistics.Math.Vector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a double using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThan(System.Double,Infragistics.Math.Vector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Vector"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThan(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThan(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> using the LessThan operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThan(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThanOrEqual(Infragistics.Math.Vector,Infragistics.Math.Vector)">
            <summary>
            Compares two <see cref="T:Infragistics.Math.Vector"/> instances using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">The first Vector.</param>
            <param name="x2">The second Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThanOrEqual(Infragistics.Math.Vector,Infragistics.Math.ComplexVector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.ComplexVector"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A ComplexVector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThanOrEqual(Infragistics.Math.ComplexVector,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.ComplexVector"/> and a <see cref="T:Infragistics.Math.Vector"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A ComplexVector.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThanOrEqual(Infragistics.Math.Vector,System.Double)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a double using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A double.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThanOrEqual(System.Double,Infragistics.Math.Vector)">
            <summary>
            Compares a double and a <see cref="T:Infragistics.Math.Vector"/> using the LessThanOrEquals operator pointwise.
            </summary>
            <param name="x1">A double.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThanOrEqual(Infragistics.Math.Vector,Infragistics.Math.Complex)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Vector"/> and a <see cref="T:Infragistics.Math.Complex"/> number using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Vector.</param>
            <param name="x2">A Complex number.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1[i],x2).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_LessThanOrEqual(Infragistics.Math.Complex,Infragistics.Math.Vector)">
            <summary>
            Compares a <see cref="T:Infragistics.Math.Complex"/> number and a <see cref="T:Infragistics.Math.Vector"/> using the LessThanOrEquals 
            operator pointwise.
            </summary>
            <param name="x1">A Complex number.</param>
            <param name="x2">A Vector.</param>
            <returns>A <see cref="T:Infragistics.Math.BooleanVector"/> y, where y[i] = LessThanOrEquals(x1,x2[i]).</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Implicit(System.Double)~Infragistics.Math.Vector">
            <summary>
            Casts a double to a unitary <see cref="T:Infragistics.Math.Vector"/>. 
            </summary>
            <param name="x">A double.</param>
            <returns>A unitary Vector y, where y[0] = x.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Explicit(Infragistics.Math.Vector)~System.Double[]">
            <summary>
            Casts a <see cref="T:Infragistics.Math.Vector"/> to a double array. 
            </summary>
            <param name="x">A Vector.</param>
            <returns>A double array y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Implicit(System.Double[])~Infragistics.Math.Vector">
            <summary>
            Casts a double array to a row <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A double array.</param>
            <returns>A row Vector y, where y[i] = x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Explicit(System.Int32[])~Infragistics.Math.Vector">
            <summary>
            Casts an int array to a row <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">An int array.</param>
            <returns>A row Vector y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Explicit(System.Int16[])~Infragistics.Math.Vector">
            <summary>
            Casts a short array to a row <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A short array.</param>
            <returns>A row Vector y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Explicit(System.Int64[])~Infragistics.Math.Vector">
            <summary>
            Casts a long array to a row <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A uint array.</param>
            <returns>A row Vector y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Explicit(System.Single[])~Infragistics.Math.Vector">
            <summary>
            Casts a float array to a row <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A float array.</param>
            <returns>A row Vector y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.op_Explicit(System.Decimal[])~Infragistics.Math.Vector">
            <summary>
            Casts a decimal array to a row <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="x">A decimal array.</param>
            <returns>A row Vector y, where y[i] = (double)x[i].</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.Abs">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Abs(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Abs(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Acos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Acos(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Acos(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Add(Infragistics.Math.Vector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] + x[i].
            </summary>
            <param name="x">A Vector.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.Add(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] + x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Vector.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.Arg">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Arg(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Arg(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Asin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Asin(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Asin(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Atan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Atan(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Atan(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Ceiling">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Ceiling(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Ceiling(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.CompareTo(Infragistics.Math.Vector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A Vector.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.CompareTo(Infragistics.Math.ComplexVector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with CompareTo(y[i],x[i]).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.ComplexVector"/>.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.CompareTo(System.Double)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Vector.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.CompareTo(Infragistics.Math.Complex)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with CompareTo(y[i],x).
            </summary>
            <param name="x">A <see cref="T:Infragistics.Math.Complex"/> number.</param>
            <returns>The modified Vector.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.Cos">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Cos(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cos(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Cosh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Cosh(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Cosh(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Divide(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] / x[i].
            </summary>
            <param name="x">A Vector.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.Divide(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] / x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Vector.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.Exp">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Exp(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Exp(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Floor">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Floor(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Floor(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Log">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Log(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Log(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Log(y[i],B).
            </summary>
            <param name="B">The base of the logarithm.</param>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log(Infragistics.Math.Vector,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Log2">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Log2(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log2(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Log10">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Log10(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Log10(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Mod(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] % x[i].
            </summary>
            <param name="x">A Vector.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.Mod(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] % x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Vector.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.Multiply(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] * x[i].
            </summary>
            <param name="x">A Vector.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.Multiply(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] * x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Vector.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.Pow(Infragistics.Math.Vector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Pow(y[i],x[i]).
            </summary>
            <param name="x">A Vector.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Vector,Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Pow(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Pow(y[i],x).
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Pow(Infragistics.Math.Vector,System.Double)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Round">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Round(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Round(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Sign">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Sign(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sign(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Sin">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Sin(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sin(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Sinh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Sinh(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sinh(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Sqrt">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Sqrt(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sqrt(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Subtract(Infragistics.Math.Vector)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] - x[i].
            </summary>
            <param name="x">A Vector.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArithmeticException">
            Occurs when the Vector and <paramref name="x"/> have different dimensions. 
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.Subtract(System.Double)">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[i] - x.
            </summary>
            <param name="x">A double.</param>
            <returns>The modified Vector.</returns>
        </member>
        <member name="M:Infragistics.Math.Vector.Tan">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Tan(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tan(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Tanh">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with Tanh(y[i]).
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Tanh(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Bin(System.Int32)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/> by replacing its element with a bin number.
            </summary>
            <param name="N">The number of evenly-spaced bins.</param>
            <returns>The modified Vector.</returns>
            <exception cref="T:System.ArgumentException">
            Occurs when N is less than one.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.Bin(Infragistics.Math.Vector)">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/> by replacing each element with a bin number. 
            </summary>
            <param name="edges">edges[i] and edges[i+1] are the edges of the ith bin.</param>
            <returns>The modified Vector.</returns>
            <remarks>
            If an element of the Vector is not in any bin, it is replaced by Constant.NaN.
            </remarks>
            <exception cref="T:System.ArgumentException">
            Occurs when there are less than two bin <paramref name="edges"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs when the bin edges are not in increasing order.
            </exception>
        </member>
        <member name="M:Infragistics.Math.Vector.Clone">
            <summary>
            Returns a copy of the <see cref="T:Infragistics.Math.Vector"/> instance.
            </summary>
        </member>
        <member name="M:Infragistics.Math.Vector.CumProduct">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[0]*...*y[i].
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.CumProduct(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.CumSum">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/>, y, by replacing each element y[i] with y[0]+...+y[i].
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.CumSum(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Reverse">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/> by reversing the order of its elements.
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Reverse(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Sort">
            <summary>
            Modifies the <see cref="T:Infragistics.Math.Vector"/> by sorting the elements by value in ascending order.
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Sort(Infragistics.Math.Vector)"/>
        </member>
        <member name="M:Infragistics.Math.Vector.Transpose">
            <summary>
            Modifies a <see cref="T:Infragistics.Math.Vector"/> by switching its orientation. A row Vector is converted to a column 
            Vector and vice versa.
            </summary>
            <returns>The modified Vector.</returns>
            <seealso cref="M:Infragistics.Math.Compute.Transpose(Infragistics.Math.Vector)"/>
        </member>
        <member name="P:Infragistics.Math.Vector.Item(System.Int32[])">
            <summary>
            An indexer that gets and sets a single element of a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="indices">An index that specifies an element of the Vector.</param>
            <returns>The specified element of the Vector.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the Vector is indexed with more than two indices.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the Vector is indexed below 0 or above its length.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if a row Vector is indexed with two indices and the first index is greater than 0.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if a column Vector is indexed with two indices and the second index is greater than 0.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the empty Vector is indexed.
            </exception>
        </member>
        <member name="P:Infragistics.Math.Vector.Item(Infragistics.Math.Vector)">
            <summary>
            An indexer that gets or sets a set of elements in a <see cref="T:Infragistics.Math.Vector"/>.
            </summary>
            <param name="indices">A Vector of integer indices.</param>
            <returns>A Vector of elements specified by the <paramref name="indices"/></returns>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the Vector is indexed below 0 or above its length.
            </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            Occurs if the empty Vector is indexed.
            </exception>
            <exception cref="T:System.ArgumentException">
            Occurs if the indices are not integers.
            </exception>
        </member>
        <member name="T:Infragistics.Shared.AssemblyVersion">
            <summary>
            Contains version information for the Infragistics assemblies.
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.MajorMinor">
            <summary>
            Major.Minor number portion of the assembly version
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Build">
            <summary>
            Build number portion of the assembly version
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Revision">
            <summary>
            Revision number portion of the assembly version
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Version">
            <summary>
            Assembly version number
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.ToolBoxBitmapFolder">
            <summary>
            Location of the resources for toolbox bitmaps. 
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.CompanyName">
            <summary>
            Assembly company name
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.EndCopyrightYear">
            <summary>
            End year of assembly copyright
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.SatelliteContractVersion">
            <summary>
            The assembly version number for the satellite assemblies.
            </summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Configuration">
            <summary>
            The current build configuration for the assembly.
            </summary>
        </member>
    </members>
</doc>
