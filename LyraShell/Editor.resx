<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="previewBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAV+klEQVR4XuVaB1SVV7pFYxInMxpT34wp
        vhknL+1NJo6TZMyKY8zojIkaRVQIFhQBwRKlKR1UBBWkCKIUUUQBFbGBgAU1dqOCMXYN9hZjbFGs++39
        wx955AI3yctbs5bfWnvB/e+9/3/OPl/Z3znXBsADDYsXHyRYvPggweLFBwkWLz5IsHjxQYLFiw8SLF58
        kGDx4oMEixcfJFi8+CDB8kULFhIS0nzu3Lk7c3JyjmRkZGzMz89fnJaWFu3p6TnUwcHB0d7e/r3c3NzX
        MjMzX/D29m760ksvNeTXGgiLFi2ySUpKsundu7eB4uJim88++8wmISHBxtbW1mbx4sU227dvN66VlJTY
        +Pn52XTv3t343NatW21SU1Nt7OzsbPLy8mz27dtnU1paarNp0yaNyRjbzzJrCUhOTv5zUVHRXT4YHCg4
        UGzYsAEcIDggA5s3b9Z7ZznhnZzwSg48hZ8L52uXxMTEzo6Oju+TqD9Onz791/Hx8Y14W4MgQQSsW7fO
        IMDf398gZsWKFQYBJNogQERWJyA4OFhD+3lmLQHOzs7tNXEOCmTeQFxcHEgMuOpYsGABCgoKwEngiy++
        wMGDBw3s3r3bxB0O/Obnn39+lX9PcwJb6U3ZYWFhccuWLXPl93qR4A78v/XQoUNbtmnTpjEf+z1BlsYp
        /Gyz8qYNOChnrhK4Crh37x4/dt/u3r2LO3fu4Nq1a5g1axYmT56MadOmYfbs2ViyZInhLfIcTh47duxA
        WVkZ9u/fj/Lycpw4cQKHDh0ySCJxd3ft2nV1/fr1ZwoLC/dx9dfze3NoY4YMGeJBkttu2bKl1dq1a19l
        CDYfPnz4rzW2avjxxvFbRcC8efPC5ebZ2dn8yI83kSbcuHHD8AyRM3/+fIMgeZUI0v2//PJLg5CjR4/i
        yJEjxt/jx4/j9OnTxmu9d+DAgRt79+49tmrVqu30omU7d+5MIXnB/N/R3d29o5OT05+mTp36Wy5Y06ys
        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
</value>
  </data>
</root>