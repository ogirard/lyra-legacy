name: CI-Lyra-Release

on:
  push:
    tags:
    - 'v*' 

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v1
      - name: Setup Nuget.exe
        uses: warrenbuckley/Setup-Nuget@v1
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9
        with:
          versionSpec: "5.1.x"
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9
      - name: Restore packages
        run: nuget restore Lyra2.sln
      - name: Setup MSBuild.exe
        uses: warrenbuckley/Setup-MSBuild@v1
      - name: Build with MSBuild
        run: msbuild Lyra2.sln -p:Configuration=Release
      - name: Create archive
        run: .\Create-Release.ps1 -ReleaseName Lyra-Release-${{ steps.gitversion.outputs.semVer }}.zip
        shell: powershell
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./Lyra-Release-${{ steps.gitversion.outputs.semVer }}.zip
          asset_name: Lyra-Release-${{ steps.gitversion.outputs.semVer }}.zip
          asset_content_type: application/zip
